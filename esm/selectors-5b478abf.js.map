{"version":3,"file":"selectors-5b478abf.js","sources":["../src/app/core/util/helpers.js","../src/app/core/redux/types/routing.js","../src/app/core/util/navigation.js","../src/app/core/redux/selectors/routing.js","../src/app/features/login/redux/selectors.js"],"sourcesContent":["export function action(type, payload = {}) {\r\n  return { type, ...payload };\r\n}\r\n\r\nexport const findContentTypeMapping = (ContentTypeMappings, contentTypeId) =>\r\n  ContentTypeMappings.find(ct => ct.contentTypeID === contentTypeId);\r\n\r\nexport const getWebPImageUri = uri => {\r\n  let formatedUri = uri;\r\n  if (uri.indexOf('.gif') == -1) {\r\n    if (uri.indexOf('f=') == -1 && uri.indexOf('format=') == -1) {\r\n      if (uri.indexOf('?') > -1) {\r\n        formatedUri = `${uri}&f=webp`;\r\n      } else {\r\n        formatedUri = `${uri}?f=webp`;\r\n      }\r\n    }\r\n    if (\r\n      formatedUri.indexOf('q=') == -1 &&\r\n      formatedUri.indexOf('quality=') == -1\r\n    ) {\r\n      if (formatedUri.indexOf('?') > -1) {\r\n        formatedUri = `${formatedUri}&q=70`;\r\n      } else {\r\n        formatedUri = `${formatedUri}?q=70`;\r\n      }\r\n    }\r\n  }\r\n  return formatedUri;\r\n};\r\n\r\nexport const resizeImage = (image, height, width) => {\r\n  if (image.asset && image.asset.sys && image.asset.sys.uri) {\r\n    image.asset.sys.uri = resizeImageUri(image.asset.sys.uri, height, width);\r\n  }\r\n};\r\nexport const resizeImageUri = (uri, height, width) => {\r\n  let formatedUri = uri;\r\n  let paramDelimeter = '?';\r\n  if (uri.indexOf('?') > -1) {\r\n    paramDelimeter = '&';\r\n  }\r\n  if (width) {\r\n    if (\r\n      formatedUri.indexOf('w=') == -1 &&\r\n      formatedUri.indexOf('width=') == -1\r\n    ) {\r\n      formatedUri = `${formatedUri}${paramDelimeter}w=${width}`;\r\n      paramDelimeter = '&';\r\n    }\r\n  }\r\n  if (height) {\r\n    if (\r\n      formatedUri.indexOf('h=') == -1 &&\r\n      formatedUri.indexOf('height=') == -1\r\n    ) {\r\n      formatedUri = `${formatedUri}${paramDelimeter}h=${height}`;\r\n    }\r\n  }\r\n\r\n  return formatedUri;\r\n};\r\n\r\nexport function flattenArray(arr) {\r\n  // flatten arrays inside the supplied array and\r\n  // remove duplicates from the result\r\n  return arr\r\n    .reduce((acc, val) => acc.concat(val), [])\r\n    .filter((elem, pos, arr) => arr.indexOf(elem) == pos);\r\n}\r\n\r\nexport async function api(url, options) {\r\n  return fetch(url, options)\r\n    .then(async response => {\r\n      setTimeout(() => null, 0);\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n      return response.json().then(data => data);\r\n    })\r\n    .catch(error => {\r\n      //console.log(error);\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport function dynamicSort(property) {\r\n  var sortOrder = 1;\r\n  if (property[0] === '-') {\r\n    sortOrder = -1;\r\n    property = property.substr(1);\r\n  }\r\n  return function(a, b) {\r\n    /* next line works with strings and numbers,\r\n     * and you may want to customize it to your needs\r\n     */\r\n    var result =\r\n      a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\r\n    return result * sortOrder;\r\n  };\r\n}\r\n\r\nexport const randomString = length => {\r\n  let text = '';\r\n  const possible =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  for (var i = 0; i < length; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n};\r\n","const ROUTING_PREFIX = '@ROUTING/';\r\nexport const GET_ENTRY = `${ROUTING_PREFIX}_GET_ENTRY`;\r\nexport const SET_ENTRY = `${ROUTING_PREFIX}_SET_ENTRY`;\r\nexport const SET_NODE = `${ROUTING_PREFIX}_SET_NODE`;\r\nexport const SET_ANCESTORS = `${ROUTING_PREFIX}_SET_ANCESTORS`;\r\nexport const SET_SIBLINGS = `${ROUTING_PREFIX}_SET_SIBLINGS`;\r\nexport const SET_ENTRY_ID = `${ROUTING_PREFIX}_SET_ENTRY_ID`;\r\nexport const SET_ENTRY_RELATED_ARTICLES = `${ROUTING_PREFIX}_SET_ENTRY_RELATED_ARTICLES`;\r\n\r\nexport const SET_NAVIGATION_NOT_FOUND = `${ROUTING_PREFIX}_SET_NOT_FOUND`;\r\nexport const SET_NAVIGATION_PATH = `${ROUTING_PREFIX}_SET_NAVIGATION_PATH`;\r\n\r\nexport const SET_TARGET_PROJECT = `${ROUTING_PREFIX}_SET_TARGET_PROJECT`;\r\n\r\nexport const SET_ROUTE = `${ROUTING_PREFIX}_SET_ROUTE`;\r\nexport const CALL_HISTORY_METHOD = `${ROUTING_PREFIX}_CALL_HISTORY_METHOD`;\r\n\r\nexport const UPDATE_LOADING_STATE = `${ROUTING_PREFIX}_UPDATE_LOADING_STATE`;\r\n","import queryString from 'query-string';\r\n\r\nexport function queryParams(search) {\r\n  return queryString.parse(\r\n    typeof window != 'undefined' ? window.location.search : search\r\n  );\r\n}\r\nexport const routeParams = staticRoute =>\r\n  staticRoute && staticRoute.match ? staticRoute.match.params : {};\r\n\r\nexport const buildUrl = (route, params) => {\r\n  const qs = queryString.stringify(params);\r\n  const path = qs ? `${route}?${qs}` : route;\r\n  return path;\r\n};\r\n\r\nexport const clientHostname = () =>\r\n  `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\r\n\r\nexport const addHostname =\r\n  typeof window == 'undefined' || window.location.host == 'localhost:3000'\r\n    ? `https://${PUBLIC_URI /* global PUBLIC_URI */}`\r\n    : clientHostname();\r\n","import { List, Map } from 'immutable';\r\nimport { queryParams } from '~/core/util/navigation';\r\n\r\nexport const selectRouteEntry = state => {\r\n  return state.getIn(['routing', 'entry'], Map());\r\n};\r\nexport const selectMappedEntry = state => {\r\n  return state.getIn(['routing', 'mappedEntry'], null);\r\n};\r\nexport const selectNodeDepends = state => {\r\n  return state.getIn(['routing', 'nodeDepends'], List());\r\n};\r\nexport const selectCurrentTreeID = state => {\r\n  return state.getIn(['routing', 'currentTreeId']);\r\n};\r\nexport const selectEntryDepends = state => {\r\n  return state.getIn(['routing', 'entryDepends']);\r\n};\r\nexport const selectRouteEntryEntryId = state => {\r\n  return state.getIn(['routing', 'entry', 'sys', 'id'], null);\r\n};\r\nexport const selectRouteEntryContentTypeId = state => {\r\n  const entry = selectRouteEntry(state);\r\n  return entry && entry.getIn(['sys', 'contentTypeId'], null);\r\n};\r\nexport const selectRouteEntrySlug = state => {\r\n  return state.getIn(['routing', 'entry', 'sys', 'slug'], null);\r\n};\r\nexport const selectRouteEntryID = state => {\r\n  return state.getIn(['routing', 'entryID']);\r\n};\r\nexport const selectCurrentPath = state => {\r\n  return state.getIn(['routing', 'currentPath']);\r\n};\r\nexport const selectCurrentSearch = state => {\r\n  return state.getIn(['routing', 'location', 'search']);\r\n};\r\nexport const selectCurrentHash = state => {\r\n  return state.getIn(['routing', 'location', 'hash']);\r\n};\r\nexport const selectQueryStringAsObject = state =>\r\n  queryParams(selectCurrentSearch(state));\r\nexport const selectCurrentProject = state => {\r\n  return state.getIn(['routing', 'currentProject']);\r\n};\r\nexport const selectIsNotFound = state => {\r\n  return state.getIn(['routing', 'notFound']);\r\n};\r\nexport const selectCurrentAncestors = state => {\r\n  return state.getIn(['routing', 'currentNodeAncestors'], List());\r\n};\r\nexport const selectCurrentNode = state => {\r\n  return state.getIn(['routing', 'currentNode']);\r\n};\r\nexport const selectBreadcrumb = state => {\r\n  return (selectCurrentAncestors(state) || List()).push(\r\n    selectCurrentNode(state)\r\n  );\r\n};\r\nexport const selectRouteErrorMessage = state => {\r\n  const error = state.getIn(['routing', 'error']);\r\n  if (error && 'toJS' in error) {\r\n    return error.getIn(['data', 'message']) || error.get('statusText');\r\n  }\r\n};\r\nexport const selectRouteIsError = state => {\r\n  return state.getIn(['routing', 'isError']);\r\n};\r\nexport const selectRouteLoading = state => {\r\n  return state.getIn(['routing', 'isLoading']);\r\n};\r\nexport const selectRouteStatusCode = state => {\r\n  return state.getIn(['routing', 'statusCode']);\r\n};\r\n","export const selectUser = state => {\r\n  return state.get('user');\r\n};\r\nexport const selectUsername = state => {\r\n  return state.getIn(['user', 'username']);\r\n};\r\nexport const selectUserLoggedIn = state => {\r\n  return state.getIn(['user', 'loggedIn']);\r\n};\r\nexport const selectUserGroups = state => {\r\n  return state.getIn(['user', 'groups']);\r\n};\r\nexport const selectUserMessage = state => {\r\n  return state.getIn(['user', 'logonResult']);\r\n};\r\nexport const selectLoginScreenMode = state => {\r\n  return state.getIn(['user', 'loginScreenMode']);\r\n};\r\nexport const selectPasswordMessage = state => {\r\n  return state.getIn(['user', 'passwordResetMessage']);\r\n};\r\nexport const selectChangePasswordMessage = state => {\r\n  return state.getIn(['user', 'changePasswordMessage']);\r\n};\r\nexport const selectCaptchaSiteKey = state => {\r\n  return state.getIn(['user', 'recaptcha', 'key']);\r\n};\r\nexport const selectCaptchaData = state => {\r\n  return state.getIn(['user', 'recaptcha', 'response']);\r\n};\r\nexport const selectCaptchaResponse = state => {\r\n  return state.getIn(['user', 'recaptcha', 'response', 'isHuman']);\r\n};\r\nexport const selectCaptchaToken = state => {\r\n  return state.getIn(['user', 'recaptcha', 'response', 'token']);\r\n};\r\n"],"names":["action","type","payload","findContentTypeMapping","ContentTypeMappings","contentTypeId","find","ct","contentTypeID","ROUTING_PREFIX","GET_ENTRY","SET_ENTRY","SET_NODE","SET_ANCESTORS","SET_SIBLINGS","SET_ENTRY_ID","SET_ENTRY_RELATED_ARTICLES","SET_NAVIGATION_NOT_FOUND","SET_NAVIGATION_PATH","SET_TARGET_PROJECT","SET_ROUTE","CALL_HISTORY_METHOD","UPDATE_LOADING_STATE","queryParams","search","queryString","parse","window","location","clientHostname","protocol","hostname","port","addHostname","host","PUBLIC_URI","selectRouteEntry","state","getIn","Map","selectMappedEntry","selectNodeDepends","List","selectCurrentTreeID","selectEntryDepends","selectRouteEntryEntryId","selectRouteEntryContentTypeId","entry","selectRouteEntrySlug","selectRouteEntryID","selectCurrentPath","selectCurrentSearch","selectCurrentHash","selectQueryStringAsObject","selectCurrentProject","selectIsNotFound","selectCurrentAncestors","selectCurrentNode","selectBreadcrumb","push","selectRouteErrorMessage","error","get","selectRouteIsError","selectRouteLoading","selectRouteStatusCode","selectUser","selectUsername","selectUserLoggedIn","selectUserGroups","selectUserMessage","selectLoginScreenMode","selectPasswordMessage","selectChangePasswordMessage","selectCaptchaSiteKey","selectCaptchaData","selectCaptchaResponse","selectCaptchaToken"],"mappings":"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"}