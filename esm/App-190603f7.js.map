{"version":3,"file":"App-190603f7.js","sources":["../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/redux/reducers/navigation.js","../src/app/core/redux/reducers/routing.js","../src/app/core/redux/reducers/version.js","../src/app/core/redux/routerMiddleware.js","../src/app/core/redux/store.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/features/login/redux/sagas/register.js","../src/app/features/login/redux/sagas/index.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\n\n// Create a history depending on the environment\nconst selectedHistory =\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\n\nexport const history = (options = {}) => selectedHistory(options);\nexport const browserHistory = selectedHistory();\n","const servers = SERVERS; /* global SERVERS */\nconst alias = servers.alias.toLowerCase();\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\nconst projects = PROJECTS; /* global PROJECTS */\n\n// return a projectId via the request hostname\nconst pickProject = (hostname, query) => {\n  // if localhost we can only infer via a querystring, and take your word for it\n  if (hostname == 'localhost') {\n    return (query && query.p) || projects[0].id;\n  }\n\n  // if hostname is the actual public uri we can return the first project from the list\n  if (hostname == publicUri) {\n    return projects[0].id;\n  }\n\n  let project = 'unknown';\n\n  // // go through all the defined projects\n  // Object.entries(projects).map(([, p]) => {\n  const p = projects[0];\n\n  // check if we're accessing via the project's public uri\n  if (hostname.includes(p.publicUri)) project = p.id;\n\n  // the url structure is different for website (we don't prefix)\n  if (p.id.startsWith('website')) {\n    // check for internal and external hostnames\n    // we check live and preview distinctly so our rule does not clash with\n    // hostnames that use a project prefix\n    if (\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`preview.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  } else {\n    // check for internal and external hostnames, prefixed with the projectId\n    if (\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\n    )\n      project = p.id;\n  }\n  // });\n  return project === 'unknown' ? p.id : project;\n};\n\nexport default pickProject;\n","import { Map, fromJS, List } from 'immutable';\n\nimport {\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/core/redux/types/navigation';\n\nconst initialState = Map({\n  root: null,\n  treeDepends: new List([]),\n  isError: false,\n  isReady: false,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NODE_TREE: {\n      return state.set('root', fromJS(action.nodes)).set('isReady', true);\n    }\n    case GET_NODE_TREE_ERROR: {\n      return state.set('isError', true);\n    }\n    default:\n      return state;\n  }\n};\n","import { OrderedMap, fromJS, List, Set } from 'immutable';\nimport {\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_ANCESTORS,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  SET_SURROGATE_KEYS,\n  UPDATE_LOADING_STATE,\n} from '~/core/redux/types/routing';\n\nlet initialState = OrderedMap({\n  contentTypeId: null,\n  currentPath: '/',\n  currentNode: [],\n  currentNodeAncestors: List(),\n  currentProject: 'unknown',\n  entryID: null,\n  entry: null,\n  currentTreeId: null,\n  entryDepends: List(),\n  isLoading: false,\n  location: null,\n  mappedEntry: OrderedMap(),\n  nodeDepends: List(),\n  notFound: false,\n  staticRoute: null,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ANCESTORS: {\n      if (action.ancestors) {\n        return state.set('currentNodeAncestors', fromJS(action.ancestors));\n      }\n      return state.set('currentNodeAncestors', fromJS(action.ancestors));\n    }\n    case SET_ENTRY: {\n      const {\n        entry,\n        mappedEntry,\n        node = {},\n        isLoading = false,\n        notFound = false,\n      } = action;\n      let nextState;\n\n      if (!entry) {\n        nextState = state\n          .set('entryID', null)\n          .set('entry', null)\n          .set('mappedEntry', OrderedMap())\n          .set('isLoading', isLoading)\n          .set('notFound', notFound);\n      } else {\n        nextState = state\n          .set('entryID', action.id)\n          .set('entry', fromJS(entry))\n          .set('isLoading', isLoading)\n          .set('notFound', notFound);\n\n        if (mappedEntry && Object.keys(mappedEntry).length > 0)\n          nextState = nextState\n            .set('mappedEntry', fromJS(mappedEntry))\n            .set('entry', fromJS({ sys: entry.sys }));\n      }\n\n      if (!node) {\n        return nextState.set('nodeDepends', null).set('currentNode', null);\n      } else {\n        // On Set Node, we reset all dependants.\n        return nextState\n          .set('currentNode', fromJS(node))\n          .removeIn(['currentNode', 'entry']); // We have the entry stored elsewhere, so lets not keep it twice.\n      }\n    }\n    case UPDATE_LOADING_STATE: {\n      return state.set('isLoading', action.isLoading);\n    }\n    case SET_NAVIGATION_PATH: {\n      let staticRoute = false;\n      if (action.staticRoute) {\n        staticRoute = { ...action.staticRoute };\n      }\n      if (action.path) {\n        // Don't run a path update on initial load as we allready should have it in redux\n        const entryUri = state.getIn(['entry', 'sys', 'uri']);\n        if (entryUri != action.path) {\n          return state\n            .set('currentPath', fromJS(action.path))\n            .set('location', fromJS(action.location))\n            .set(\n              'staticRoute',\n              fromJS({\n                ...staticRoute,\n                route: { ...staticRoute.route, component: null },\n              })\n            )\n            .set('isLoading', typeof window !== 'undefined');\n        } else {\n          return state.set('location', fromJS(action.location)).set(\n            'staticRoute',\n            fromJS({\n              ...staticRoute,\n              route: { ...staticRoute.route, component: null },\n            })\n          );\n        }\n      }\n      return state;\n    }\n    case SET_ROUTE: {\n      return state.set('nextPath', action.path);\n    }\n    case SET_SIBLINGS: {\n      // Can be null in some cases like the homepage.\n      let currentNodeSiblingParent = null;\n      let siblingIDs = [];\n      if (action.siblings && action.siblings.length > 0) {\n        currentNodeSiblingParent = action.siblings[0].parentId;\n        siblingIDs = action.siblings.map(node => {\n          return node.id;\n        });\n      }\n      let currentNodeDepends = state.get('nodeDepends');\n      const allNodeDepends = Set.union([Set(siblingIDs), currentNodeDepends]);\n      return state\n        .set('nodeDepends', allNodeDepends)\n        .set('currentNodeSiblings', fromJS(action.siblings))\n        .set('currentNodeSiblingsParent', currentNodeSiblingParent);\n    }\n    case SET_SURROGATE_KEYS: {\n      return state.set('surrogateKeys', action.keys);\n    }\n    case SET_TARGET_PROJECT: {\n      return state\n        .set('currentProject', action.project)\n        .set('currentTreeId', '') //getTreeID(action.project))\n        .set('allowedGroups', fromJS(action.allowedGroups));\n    }\n    default:\n      return state;\n  }\n};\n","import { Map } from 'immutable';\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/core/redux/types/version';\n\nlet initialState = Map({\n  commitRef: null,\n  buildNo: null,\n  contensisVersionStatus: 'published',\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VERSION_STATUS: {\n      return state.set('contensisVersionStatus', action.status);\n    }\n    case SET_VERSION: {\n      return state\n        .set('commitRef', action.commitRef)\n        .set('buildNo', action.buildNo);\n    }\n    default:\n      return state;\n  }\n};\n","import { CALL_HISTORY_METHOD } from '~/core/redux/types/routing';\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n/* eslint-disable no-unused-vars */\nconst routerMiddleware = history => store => next => action => {\n  if (action.type !== CALL_HISTORY_METHOD) {\n    return next(action);\n  }\n\n  const {\n    payload: { method, args },\n  } = action;\n  history[method](...args);\n};\n\nexport default routerMiddleware;\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport { combineReducers } from 'redux-immutable';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware, { END } from 'redux-saga';\n\n// Core reducers\nimport NavigationReducer from './reducers/navigation';\nimport RoutingReducer from './reducers/routing';\nimport UserReducer from '~/features/login/redux/reducers';\nimport VersionReducer from './reducers/version';\nimport routerMiddleware from './routerMiddleware';\n\nexport let reduxStore = null;\n\nexport default (featureReducers, initialState, history) => {\n  const thunkMiddleware = [thunk];\n\n  let reduxDevToolsMiddleware = f => f;\n\n  if (typeof window != 'undefined') {\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = compose(\n    applyMiddleware(\n      ...thunkMiddleware,\n      sagaMiddleware,\n      routerMiddleware(history)\n    ),\n    reduxDevToolsMiddleware\n  );\n\n  let reducers = {\n    navigation: NavigationReducer,\n    routing: RoutingReducer,\n    user: UserReducer,\n    version: VersionReducer,\n    ...featureReducers,\n  };\n\n  const combinedReducers = combineReducers(reducers);\n\n  const store = initialState => {\n    const store = createStore(combinedReducers, initialState, middleware);\n    store.runSaga = sagaMiddleware.run;\n    store.close = () => store.dispatch(END);\n    return store;\n  };\n\n  reduxStore = store(initialState);\n  return reduxStore;\n};\n","import { Client } from 'contensis-delivery-api';\nimport { setSurrogateKeys } from '../redux/actions/routing';\nimport { reduxStore } from '../redux/store';\n\nconst storeSurrogateKeys = response => {\n  const keys = response.headers.get\n    ? response.headers.get('surrogate-key')\n    : response.headers.map['surrogate-key'];\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys));\n};\n\nconst getClientConfig = project => {\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\n  config.responseHandler = {};\n\n  if (project) {\n    config.projectId = project;\n  }\n\n  // // we only want the surrogate key header in a server context\n  if (typeof window === 'undefined') {\n    config.defaultHeaders = {\n      'x-require-surrogate-key': true,\n    };\n    config.responseHandler[200] = storeSurrogateKeys;\n  }\n\n  if (\n    typeof window !== 'undefined' &&\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\n  ) {\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\n    config.rootUrl = '';\n    config.responseHandler[404] = () => null;\n  }\n  return config;\n};\n\nexport * from 'contensis-delivery-api';\n\nclass DeliveryApi {\n  getClientSideVersionStatus = () => {\n    if (typeof window != 'undefined') {\n      const currentHostname = window.location.hostname;\n      return this.getVersionStatusFromHostname(currentHostname);\n    }\n    return null;\n  };\n  getVersionStatusFromHostname = currentHostname => {\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\n\n    if (currentHostname.endsWith('contensis.cloud')) {\n      if (currentHostname.indexOf('preview.') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    if (currentHostname.endsWith('cloud.contensis.com')) {\n      if (currentHostname.indexOf('preview-') > -1) {\n        return 'latest';\n      } else {\n        return 'published';\n      }\n    }\n\n    return 'published';\n  };\n  search = (query, linkDepth, project, env) => {\n    const client = Client.create(getClientConfig(project, env));\n    return client.entries.search(\n      query,\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\n    );\n  };\n  getClient = (deliveryApiStatus = 'published', project, env) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    return Client.create(baseConfig);\n  };\n  getEntry = (\n    id,\n    linkDepth = 0,\n    deliveryApiStatus = 'published',\n    project,\n    env\n  ) => {\n    const baseConfig = getClientConfig(project, env);\n    baseConfig.versionStatus = deliveryApiStatus;\n    const client = Client.create(baseConfig);\n    // return client.entries.get(id, linkDepth);\n    return client.entries.get({ id, linkDepth });\n  };\n}\n\nexport const deliveryApi = new DeliveryApi();\n\nclass CacheNode {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.next = null;\n    this.prev = null;\n  }\n}\n\nclass LruCache {\n  constructor(limit = 100) {\n    this.map = {};\n    this.head = null;\n    this.tail = null;\n    this.limit = limit || 100;\n    this.size = 0;\n  }\n\n  get(key) {\n    if (this.map[key]) {\n      let value = this.map[key].value;\n      let node = new CacheNode(key, value);\n      this.remove(key);\n      this.setHead(node);\n      return value;\n    }\n  }\n\n  set(key, value) {\n    let node = new CacheNode(key, value);\n    if (this.map[key]) {\n      this.remove(key);\n    } else {\n      if (this.size >= this.limit) {\n        delete this.map[this.tail.key];\n        this.size--;\n        this.tail = this.tail.prev;\n        this.tail.next = null;\n      }\n    }\n    this.setHead(node);\n  }\n\n  setHead(node) {\n    node.next = this.head;\n    node.prev = null;\n    if (this.head) {\n      this.head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n    this.size++;\n    this.map[node.key] = node;\n  }\n\n  remove(key) {\n    let node = this.map[key];\n    if (node.prev) {\n      node.prev.next = node.next;\n    } else {\n      this.head = node.next;\n    }\n    if (node.next) {\n      node.next.prev = node.prev;\n    } else {\n      this.tail = node.prev;\n    }\n    delete this.map[key];\n    this.size--;\n  }\n}\n\nclass CachedSearch {\n  cache = new LruCache();\n  taxonomyLookup = {};\n\n  search(query, linkDepth, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      project + JSON.stringify(query) + linkDepth.toString(),\n      () => client.entries.search(query, linkDepth)\n    );\n  }\n\n  get(id, linkDepth, versionStatus, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    client.clientConfig.versionStatus = versionStatus;\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\n  }\n\n  getContentType(id, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\n      client.contentTypes.get(id)\n    );\n  }\n\n  getTaxonomyNode(key, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\n      client.taxonomy\n        .resolveChildren(key)\n        .then(node => this.extendTaxonomyNode(node))\n    );\n  }\n\n  getRootNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\n      client.nodes.getRoot(options)\n    );\n  }\n\n  getNode(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.get(options)\n    );\n  }\n\n  getAncestors(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getAncestors(options)\n    );\n  }\n\n  getChildren(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getChildren(options)\n    );\n  }\n\n  getSiblings(options, project, env) {\n    const client = Client.create(getClientConfig(project, env));\n    return this.request(\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\n        options\n      )}`,\n      () => client.nodes.getSiblings(options)\n    );\n  }\n\n  request(key, execute) {\n    if (!this.cache.get(key) || typeof window == 'undefined') {\n      let promise = execute();\n      this.cache.set(key, promise);\n      promise.catch(() => {\n        this.cache.remove(key);\n      });\n    }\n    return this.cache.get(key);\n  }\n\n  extendTaxonomyNode(node) {\n    let id = this.getTaxonomyId(node);\n    this.taxonomyLookup[id] = node.key;\n    return {\n      ...node,\n      id,\n      children: node.children\n        ? node.children.map(n => this.extendTaxonomyNode(n))\n        : null,\n    };\n  }\n\n  getTaxonomyId(node) {\n    if (node.key) {\n      let parts = node.key.split('/');\n      return parts[parts.length - 1];\n    }\n    return '';\n  }\n\n  getTaxonomyKey(id) {\n    return this.taxonomyLookup[id];\n  }\n}\n\nexport const cachedSearch = new CachedSearch();\n","import { takeEvery, put, select } from 'redux-saga/effects';\n\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\nimport {\n  GET_NODE_TREE,\n  SET_NODE_TREE,\n  GET_NODE_TREE_ERROR,\n} from '~/core/redux/types/navigation';\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\nimport { selectVersionStatus } from '../selectors/version';\nimport { selectCurrentProject } from '../selectors/routing';\n\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\n\nexport function* ensureNodeTreeSaga(action) {\n  const state = yield select();\n  try {\n    if (!hasNavigationTree(state)) {\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\n      const project = yield select(selectCurrentProject);\n      const nodes = yield deliveryApi\n        .getClient(deliveryApiVersionStatus, project)\n        .nodes.getRoot({\n          depth: action.treeDepth || 0,\n        });\n      if (nodes) {\n        yield put({ type: SET_NODE_TREE, nodes });\n      } else {\n        yield put({ type: GET_NODE_TREE_ERROR });\n      }\n    }\n  } catch (ex) {\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\n  }\n}\n","export const DataFormats = {\n  entry: 'entry',\n  webpage: 'webpage',\n};\n\nconst sys = {\n  contentTypeId: 'sys.contentTypeId',\n  dataFormat: 'sys.dataFormat',\n  filename: 'sys.properties.filename',\n  id: 'sys.id',\n  includeInSearch: 'sys.metadata.includeInSearch',\n  slug: 'sys.slug',\n  uri: 'sys.uri',\n  versionStatus: 'sys.versionStatus',\n};\n\nexport const Fields = {\n  entryTitle: 'entryTitle',\n  entryDescription: 'entryDescription',\n  keywords: 'keywords',\n  sys,\n  contentTypeId: 'sys.contentTypeId',\n  wildcard: '*',\n};\n\nexport const Projects = {\n  website: 'website',\n};\n\nexport const VersionStatus = {\n  published: 'published',\n  latest: 'latest',\n};\n\nexport const ContentTypes = {\n  contentPage: 'contentPage',\n};\n\nexport const WebpageFormats = {};\n\nexport const FilterExpressionTypes = {\n  contentType: 'contentType',\n  field: 'field',\n};\n","import { Op, OrderBy } from 'contensis-delivery-api';\nimport { Fields, DataFormats } from '~/core/schema';\nimport {\n  fixFreeTextForElastic,\n  extractQuotedPhrases,\n} from '~/core/search/util';\n\nexport const fieldExpression = (\n  field,\n  value,\n  operator = 'equalTo',\n  weight = null\n) => {\n  if (!field || !value) return [];\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\n  else\n    return !weight\n      ? [Op[operator](field, value)]\n      : [Op[operator](field, value).weight(weight)];\n};\n\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\n  const expressions = [];\n  if (!contentTypeIds && !webpageTemplates) return expressions;\n\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\n    );\n  }\n\n  if (webpageTemplates && webpageTemplates.length > 0) {\n    expressions.push(\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\n    );\n  }\n\n  if (expressions.length > 1) return [Op.or(...expressions)];\n\n  return expressions;\n};\n\nexport const filterExpressions = filters => {\n  if (!filters) return [];\n  const expressions = [];\n\n  filters.map(param => {\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\n  });\n\n  return expressions;\n};\n\nexport const dataFormatExpression = (\n  contentTypeIds,\n  dataFormat = DataFormats.entry\n) => {\n  if (contentTypeIds && contentTypeIds.length > 0) {\n    /**\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\n     * to indicate this is a \"not\" expression\n     */\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\n    const notContentTypeIds = contentTypeIds\n      .filter(c => c.startsWith('!'))\n      .map(id => id.substring(1));\n\n    const andExpr = Op.and();\n\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\n\n    const withExpr = fieldExpression(\n      Fields.sys.contentTypeId,\n      withContentTypeIds\n    );\n\n    const notExpr = [\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\n    ];\n\n    andExpr.add(...dataFormatExpr);\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\n\n    return [andExpr];\n  }\n  return [];\n};\n\nexport const defaultExpressions = versionStatus => {\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\n};\n\nexport const defaultSearchExpressions = versionStatus => {\n  return [\n    ...defaultExpressions(versionStatus),\n    ...includeInSearchExpressions(),\n  ];\n};\nexport const includeInSearchExpressions = () => [\n  Op.or(\n    Op.and(\n      Op.exists(Fields.sys.includeInSearch, true),\n      Op.equalTo(Fields.sys.includeInSearch, true)\n    ),\n    Op.exists(Fields.sys.includeInSearch, false)\n  ),\n];\n\nexport const orderByExpression = orderBy => {\n  let expression = OrderBy;\n  if (orderBy && orderBy.length > 0) {\n    orderBy.map(\n      ob =>\n        (expression = ob.startsWith('-')\n          ? expression.desc(ob.substring(1))\n          : expression.asc(ob))\n    );\n  }\n  return expression;\n};\n\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\n  arr.length === 0\n    ? []\n    : arr.length === 1\n    ? [Op[operator](field, arr[0])]\n    : [Op.in(field, ...arr)];\n\nexport const customWhereExpressions = where => {\n  if (!where || !Array.isArray(where)) return [];\n\n  // Accept HTTP style objects and map them to\n  // their equivalent JS client \"Op\" expressions\n  return where.map(clause => {\n    let expression;\n    Object.keys(clause).map((key, idx) => {\n      if (idx === 1) {\n        const operator = key;\n        const value = clause[key];\n        expression = Op[operator](clause.field, value, clause.weight);\n      }\n    });\n    return expression;\n  });\n};\n\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\n    // Extract any phrases in quotes to array\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\n\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\n    let modifiedSearchTerm = searchTerm;\n    quotedPhrases.forEach(\n      qp =>\n        (modifiedSearchTerm = modifiedSearchTerm\n          .replace(qp, '')\n          .replace('\"\"', '')\n          .trim())\n    );\n\n    // Push to the operators array to include in the query\n    const operators = [];\n\n    // Helper functions to generate Op expressions\n    const containsOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'contains',\n        f.weight\n      );\n    const freeTextOp = (f, term) =>\n      fieldExpression(\n        f.fieldId,\n        fixFreeTextForElastic(term),\n        'freeText',\n        f.weight\n      );\n\n    // For each weighted search field\n    weightedSearchFields.forEach(f => {\n      // Push to field operators\n      const fieldOperators = [];\n\n      // Add operator expressions for modified search term\n      if (modifiedSearchTerm) {\n        if (\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\n            f.fieldId\n          )\n        ) {\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\n        } else {\n          if ([Fields.entryTitle].includes(f.fieldId)) {\n            fieldOperators.push(\n              Op.or(\n                ...containsOp(f, modifiedSearchTerm),\n                ...freeTextOp(f, modifiedSearchTerm)\n              )\n            );\n          } else {\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\n          }\n        }\n      }\n\n      // Add operator expressions for any quoted phrases\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\n\n      // If we are using multiple operators for a field we will\n      // wrap each field inside an And operator so we will match\n      // all terms/phrases rather than any terms/phrases\n      if (fieldOperators.length > 1) {\n        operators.push(Op.and(...fieldOperators));\n      } else {\n        operators.push(...fieldOperators);\n      }\n    });\n\n    // Wrap operators in an Or operator\n    return [Op.or().addRange(operators)];\n  } else if (searchTerm) {\n    return [Op.contains(Fields.wildcard, searchTerm)];\n  } else {\n    return [];\n  }\n};\n","// eslint-disable-next-line import/named\nimport { Query } from '~/core/util/ContensisDeliveryApi';\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\n\nexport const routeEntryByFieldsQuery = (\n  id,\n  fields = [],\n  versionStatus = 'published'\n) => {\n  const query = new Query(\n    ...[...fieldExpression('sys.id', id), ...defaultExpressions(versionStatus)]\n  );\n  query.fields = fields;\n  return query;\n};\n","// load-entries.js\nimport * as log from 'loglevel';\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\nimport {\n  SET_ENTRY,\n  SET_ANCESTORS,\n  SET_NAVIGATION_PATH,\n  SET_ROUTE,\n  CALL_HISTORY_METHOD,\n  SET_SIBLINGS,\n  UPDATE_LOADING_STATE,\n} from '~/core/redux/types/routing';\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\nimport {\n  selectCurrentAncestors,\n  selectCurrentNode,\n  selectCurrentProject,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryEntryId,\n  selectRouteEntryLanguage,\n} from '~/core/redux/selectors/routing';\nimport { GET_NODE_TREE } from '../types/navigation';\nimport { hasNavigationTree } from '../selectors/navigation';\nimport { routeEntryByFieldsQuery } from './queries';\nimport { ensureNodeTreeSaga } from './navigation';\nimport { handleRequiresLoginSaga } from '~/features/login/redux/sagas/login';\nimport { findContentTypeMapping } from '~/core/util/helpers';\nimport { Map } from 'immutable';\n\nexport const routingSagas = [\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\n  takeEvery(SET_ROUTE, setRouteSaga),\n];\n\n/**\n * To navigate / push a specific route via redux middleware\n * @param {path, state} action\n */\nfunction* setRouteSaga(action) {\n  yield put({\n    type: CALL_HISTORY_METHOD,\n    payload: {\n      method: 'push',\n      args: [action.path, action.state],\n    },\n  });\n}\n\nfunction* getRouteSaga(action) {\n  let entry = null;\n  try {\n    const {\n      withEvents,\n      routes: { ContentTypeMappings = {} } = {},\n      staticRoute,\n    } = action;\n\n    // Variables we will pass to setRouteEntry\n    let pathNode = null,\n      ancestors = null,\n      siblings = null;\n\n    // These variables are the return values from\n    // calls to withEvents.onRouteLoad and onRouteLoaded\n    let appsays,\n      requireLogin = false;\n\n    if (withEvents && withEvents.onRouteLoad) {\n      appsays = yield withEvents.onRouteLoad(action);\n    }\n    // if appsays customNavigation: true, we will set doNavigation to false\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\n    const doNavigation =\n      !appsays ||\n      (appsays && appsays.customNavigation === true\n        ? false\n        : (appsays && appsays.customNavigation) || true);\n\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\n    const setContentTypeLimits = !!ContentTypeMappings.find(\n      ct => ct.fields || ct.linkDepth\n    );\n\n    const state = yield select();\n    const routeEntry = selectRouteEntry(state);\n    // const routeNode = selectCurrentNode(state);\n    const currentPath = action.path; //selectCurrentPath(state);\n    const deliveryApiStatus = selectVersionStatus(state);\n    const project = selectCurrentProject(state);\n    const isHome = currentPath === '/';\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\n\n    // debugger;\n    // routeEntry = Map({\n    //   entryTitle: 'fake entry',\n    //   title: 'fakey entry',\n    //   sys: { id: 'abcd', contentTypeId: 'zenbaseHomePage' },\n    // });\n\n    if (\n      !isPreview &&\n      ((appsays && appsays.customRouting) ||\n        (staticRoute && !staticRoute.route.fetchNode) ||\n        (routeEntry && action.statePath === action.path))\n    ) {\n      // To prevent erroneous 404s and wasted network calls, this covers\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\n      // - standard Contensis SiteView Routing where we already have that entry in state\n      if (\n        routeEntry &&\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\n      ) {\n        pathNode = {};\n        pathNode.entry = entry = routeEntry.toJS();\n        //Do nothing, the entry is allready the right one.\n        // yield put({\n        //   type: SET_ENTRY,\n        //   entry,\n        //   node: routeNode,\n        //   isLoading: false,\n        // });\n        yield put({\n          type: UPDATE_LOADING_STATE,\n          isLoading: false,\n        });\n      } else\n        yield call(\n          setRouteEntry,\n          routeEntry && routeEntry.toJS(),\n          yield select(selectCurrentNode),\n          yield select(selectCurrentAncestors)\n        );\n    } else {\n      // Handle homepage\n      if (isHome) {\n        pathNode = yield cachedSearch.getRootNode(\n          {\n            depth: 0,\n            entryFields: '*',\n            entryLinkDepth,\n            language: defaultLang,\n            versionStatus: deliveryApiStatus,\n          },\n          project\n        );\n        ({ entry } = pathNode || {});\n      } else {\n        // Handle preview routes\n        if (isPreview) {\n          let splitPath = currentPath.split('/');\n          let entryGuid = splitPath[2];\n          let language = defaultLang;\n          if (splitPath.length >= 3) {\n            //set lang key if available in the path, else use default lang\n            //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\n            if (splitPath.length == 4) language = splitPath[3];\n            // According to product dev we cannot use Node API\n            // for previewing entries as it gives a response of []\n            // -- apparently it is not correct to request latest content\n            // with Node API\n\n            let previewEntry = yield deliveryApi\n              .getClient(deliveryApiStatus, project)\n              .entries.get({\n                id: entryGuid,\n                language,\n                linkDepth: entryLinkDepth,\n              });\n            if (previewEntry) {\n              pathNode = { entry: previewEntry };\n              ({ entry } = pathNode || {});\n            }\n          }\n        } else {\n          // Handle all other routes\n          pathNode = yield cachedSearch.getNode(\n            {\n              depth:\n                doNavigation === true || doNavigation.children === true\n                  ? 3\n                  : (doNavigation && doNavigation.children) || 0,\n              path: currentPath,\n              entryFields: setContentTypeLimits\n                ? ['sys.contentTypeId', 'sys.id']\n                : '*',\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\n              versionStatus: deliveryApiStatus,\n            },\n            project\n          );\n          ({ entry } = pathNode || {});\n\n          if (\n            setContentTypeLimits &&\n            pathNode &&\n            pathNode.entry &&\n            pathNode.entry.sys &&\n            pathNode.entry.sys.id\n          ) {\n            const { fields, linkDepth } =\n              findContentTypeMapping(\n                ContentTypeMappings,\n                pathNode.entry.sys.id\n              ) || {};\n            const query = routeEntryByFieldsQuery(\n              pathNode.entry.sys.id,\n              fields,\n              deliveryApiStatus\n            );\n            const payload = yield cachedSearch.search(\n              query,\n              typeof linkDepth !== 'undefined' ? linkDepth : 3,\n              project\n            );\n            if (payload && payload.items && payload.items.length > 0) {\n              pathNode.entry = payload.items[0];\n            }\n          }\n        }\n\n        if (pathNode && pathNode.id) {\n          if (doNavigation === true || doNavigation.ancestors) {\n            try {\n              ancestors = yield cachedSearch.getAncestors(\n                {\n                  id: pathNode.id,\n                  versionStatus: deliveryApiStatus,\n                },\n                project\n              );\n            } catch (ex) {\n              log.info('Problem fetching ancestors', ex);\n            }\n          }\n\n          if (doNavigation === true || doNavigation.siblings) {\n            try {\n              siblings = yield cachedSearch.getSiblings(\n                {\n                  id: pathNode.id,\n                  versionStatus: deliveryApiStatus,\n                },\n                project\n              );\n            } catch (ex) {\n              log.info('Problem fetching siblings', ex);\n            }\n          }\n        }\n      }\n    }\n\n    if (withEvents && withEvents.onRouteLoaded) {\n      // Check if the app has provided a requireLogin boolean flag or groups array\n      // in addition to checking if requireLogin is set in the route definition\n      ({ requireLogin } =\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\n    }\n\n    if (requireLogin !== false) {\n      // Do not call the login feature saga if requireLogin is false\n      yield call(handleRequiresLoginSaga, {\n        ...action,\n        entry,\n        requireLogin,\n      });\n    }\n\n    if (\n      pathNode &&\n      pathNode.entry &&\n      pathNode.entry.sys &&\n      pathNode.entry.sys.id\n    ) {\n      entry = pathNode.entry;\n      const { entryMapper } =\n        findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId) ||\n        {};\n      yield call(\n        setRouteEntry,\n        entry,\n        pathNode,\n        ancestors,\n        siblings,\n        entryMapper\n      );\n    } else {\n      if (pathNode)\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\n      else if (!staticRoute) yield call(do404);\n    }\n    if (!appsays || !appsays.preventScrollTop) {\n      // Scroll into View\n      if (typeof window !== 'undefined') {\n        window.scroll({\n          top: 0,\n        });\n      }\n    }\n\n    if (\n      !hasNavigationTree(state) &&\n      (doNavigation === true || doNavigation.tree)\n    )\n      if (typeof window !== 'undefined') {\n        yield put({\n          type: GET_NODE_TREE,\n          treeDepth:\n            doNavigation === true ||\n            !doNavigation.tree ||\n            doNavigation.tree === true\n              ? 2\n              : doNavigation.tree,\n        });\n      } else {\n        yield call(ensureNodeTreeSaga);\n      }\n  } catch (e) {\n    log.error(...['Error running route saga:', e, e.stack]);\n    yield call(do404);\n  }\n}\n\nfunction* setRouteEntry(\n  entry,\n  node,\n  ancestors,\n  siblings,\n  entryMapper,\n  notFound = false\n) {\n  const entrySys = (entry && entry.sys) || {};\n\n  const currentEntryId = yield select(selectRouteEntryEntryId);\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\n  const mappedEntry =\n    currentEntryId === entrySys.id && currentEntryLang === entrySys.language\n      ? (yield select(selectMappedEntry) || Map()).toJS()\n      : yield mapRouteEntry(entryMapper, {\n          ...node,\n          entry,\n          ancestors,\n          siblings,\n        });\n\n  yield all([\n    put({\n      type: SET_ENTRY,\n      id: entrySys.id,\n      entry,\n      mappedEntry,\n      node,\n      notFound,\n    }),\n    ancestors &&\n      put({\n        type: SET_ANCESTORS,\n        ancestors,\n      }),\n    siblings &&\n      put({\n        type: SET_SIBLINGS,\n        siblings,\n      }),\n  ]);\n}\n\nfunction* mapRouteEntry(entryMapper, node) {\n  try {\n    if (typeof entryMapper === 'function') {\n      const state = yield select();\n      const mappedEntry = yield call(entryMapper, node, state);\n      return mappedEntry;\n    }\n  } catch (e) {\n    log.error(...['Error running entryMapper:', e, e.stack]);\n  }\n  return;\n}\nfunction* do404() {\n  //yield call(clientReloadHitServer);\n  yield put({\n    type: SET_ENTRY,\n    id: null,\n    entry: null,\n    notFound: true,\n  });\n}\n\n// function* clientReloadHitServer() {\n//   const stateEntry = yield select(selectRouteEntry);\n//   // If in client and there is a stateEntry.sys field reload the page,\n//   // on the 2nd load stateEntry.sys should be null at this point,\n//   // we do not wish to reload again and get stuck in an infinite reloading loop\n//   if (\n//     typeof window !== 'undefined' &&\n//     stateEntry &&\n//     stateEntry.get('sys', null)\n//   ) {\n//     // debugger;\n//     window.location.reload();\n//   }\n// }\n","import { to } from 'await-to-js';\nimport { put, select, takeEvery } from 'redux-saga/effects';\nimport { setRoute } from '~/core/redux/actions/routing';\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\nimport { queryParams } from '~/core/util/navigation';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n} from '../types';\n\nexport const registerSagas = [\n  takeEvery(REGISTER_USER, registerSaga),\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\n];\n\nfunction* registerSaga({ user, mappers }) {\n  let requestBody = user;\n  // Allow use of request mapper to take a user object\n  // of any format and return the payload for the api request\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\n    requestBody = yield mappers.request(user);\n  }\n\n  // Make POST call to register API\n  const response = yield fetch('/account/register', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(requestBody),\n  });\n\n  if (response.ok) {\n    let mappedResponse;\n    const [, responseBody] = yield to(response.json());\n    if (responseBody) {\n      // Allow use of response mapper to convert the successful user object\n      // from the api response body into a user object of any format\n      if (\n        mappers &&\n        mappers.response &&\n        typeof mappers.response === 'function'\n      ) {\n        mappedResponse = yield mappers.response(responseBody);\n      }\n      // Update user object with mappedResponse or responseBody\n      yield put({\n        type: REGISTER_USER_SUCCESS,\n        user: mappedResponse || responseBody,\n      });\n    } else {\n      // OK response but unable to parse the response body\n      yield put({\n        type: REGISTER_USER_FAILED,\n        error: {\n          message:\n            'Unable to parse the created user from the register service response',\n        },\n      });\n    }\n  } else {\n    // Not OK responses, these can be due to service availability\n    // or status codes echoed from the responses received from\n    // management api when registering the user\n    const [, errorResponse] = yield to(response.json());\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\n    // Get something meaningful from the response if there is no message in the body\n    if (!error.message) {\n      error.message = `Registration service: ${response.statusText}`;\n      error.status = response.status;\n    }\n    yield put({\n      type: REGISTER_USER_FAILED,\n      error,\n    });\n  }\n}\n\nfunction* redirectSaga() {\n  // Check if querystring contains a redirect_uri\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\n\n  // We must use redux based navigation to preserve the registration state\n  if (redirectUri) yield put(setRoute(redirectUri));\n}\n","import { loginSagas } from './login';\nimport { registerSagas } from './register';\n\nexport const userSagas = [...loginSagas, ...registerSagas];\n","// index.js\nimport { all } from 'redux-saga/effects';\nimport { navigationSagas } from './navigation';\nimport { routingSagas } from './routing';\nimport { userSagas } from '~/features/login/redux/sagas/index.js';\n\nexport default function(featureSagas = []) {\n  return function* rootSaga() {\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\n    yield all([...subSagas, ...featureSagas]);\n  };\n}\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport RouteLoader from '~/core/routes/RouteLoader';\n\nconst AppRoot = props => {\n  return <RouteLoader {...props} />;\n};\n\nexport default hot(module)(AppRoot);\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","initialState","Map","root","treeDepends","List","isError","isReady","state","action","type","SET_NODE_TREE","set","fromJS","nodes","GET_NODE_TREE_ERROR","OrderedMap","contentTypeId","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","currentTreeId","entryDepends","isLoading","location","mappedEntry","nodeDepends","notFound","staticRoute","SET_ANCESTORS","ancestors","SET_ENTRY","node","nextState","Object","keys","length","sys","removeIn","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","entryUri","getIn","route","component","SET_ROUTE","SET_SIBLINGS","currentNodeSiblingParent","siblingIDs","siblings","parentId","map","currentNodeDepends","get","allNodeDepends","Set","union","SET_SURROGATE_KEYS","SET_TARGET_PROJECT","allowedGroups","commitRef","buildNo","contensisVersionStatus","SET_VERSION_STATUS","status","SET_VERSION","routerMiddleware","store","next","CALL_HISTORY_METHOD","payload","method","args","reduxStore","featureReducers","thunkMiddleware","thunk","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","middleware","compose","applyMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combinedReducers","combineReducers","createStore","runSaga","run","close","dispatch","END","storeSurrogateKeys","response","headers","setSurrogateKeys","getClientConfig","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","getVersionStatusFromHostname","indexOf","endsWith","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","deliveryApi","CacheNode","constructor","key","value","prev","LruCache","limit","head","tail","size","remove","setHead","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","getRoot","getNode","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","getTaxonomyKey","cachedSearch","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","ex","error","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","fields","Query","routingSagas","getRouteSaga","setRouteSaga","withEvents","routes","ContentTypeMappings","pathNode","appsays","requireLogin","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","routeEntry","selectRouteEntry","isHome","isPreview","defaultLang","customRouting","fetchNode","statePath","toJS","call","setRouteEntry","selectCurrentNode","selectCurrentAncestors","entryFields","language","splitPath","entryGuid","previewEntry","findContentTypeMapping","items","log","onRouteLoaded","handleRequiresLoginSaga","entryMapper","do404","preventScrollTop","scroll","top","tree","e","stack","entrySys","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","selectMappedEntry","mapRouteEntry","all","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","userSagas","loginSagas","featureSagas","rootSaga","subSagas","AppRoot","props"],"mappings":"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"}