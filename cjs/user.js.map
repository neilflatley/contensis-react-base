{"version":3,"file":"user.js","sources":["../src/app/features/login/redux/actions.js","../src/app/features/login/containers/useLogin.js","../src/app/features/login/containers/Login.container.js","../src/app/features/login/containers/useRegistration.js","../src/app/features/login/containers/Registration.container.js","../src/app/features/login/containers/withLogin.js","../src/app/features/login/containers/withRegistration.js"],"sourcesContent":["import { action } from '~/core/util/helpers';\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER } from './types';\n\nexport const loginUser = (username, password) =>\n  action(LOGIN_USER, { username, password });\n\nexport const logoutUser = redirectPath => action(LOGOUT_USER, { redirectPath });\n\nexport const registerUser = (user, mappers) =>\n  action(REGISTER_USER, {\n    user,\n    mappers,\n  });\n","import { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, logoutUser } from '../redux/actions';\nimport {\n  selectUser,\n  selectUserAuthenticationError,\n  selectUserError,\n  selectUserIsAuthenticated,\n  selectUserIsLoading,\n} from '../redux/selectors';\n\nconst useLogin = () => {\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    loginUser: (username, password) => dispatch(loginUser(username, password)),\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath)),\n    authenticationError: select(selectUserAuthenticationError),\n    error: select(selectUserError),\n    isAuthenticated: select(selectUserIsAuthenticated),\n    isLoading: select(selectUserIsLoading),\n    user: select(selectUser).toJS(),\n  };\n};\n\nexport default useLogin;\n","import useLogin from './useLogin';\nimport { toJS } from '~/core/util/ToJs';\n\nconst LoginContainer = ({ children, ...props }) => {\n  const userProps = useLogin(props);\n  return children(userProps);\n};\n\nLoginContainer.propTypes = {};\n\nexport default toJS(LoginContainer);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../redux/actions';\nimport {\n  selectUserRegistration,\n  selectUserRegistrationError,\n  selectUserRegistrationIsLoading,\n  selectUserRegistrationIsSuccess,\n} from '../redux/selectors';\n\nconst useLogin = () => {\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\n    error: select(selectUserRegistrationError),\n    isLoading: select(selectUserRegistrationIsLoading),\n    isSuccess: select(selectUserRegistrationIsSuccess),\n    user: select(selectUserRegistration).toJS(),\n  };\n};\n\nexport default useLogin;\n","import useRegistration from './useRegistration';\nimport { toJS } from '~/core/util/ToJs';\n\nconst RegistrationContainer = ({ children, ...props }) => {\n  const userProps = useRegistration(props);\n  return children(userProps);\n};\n\nRegistrationContainer.propTypes = {};\n\nexport default toJS(RegistrationContainer);\n","import { connect } from 'react-redux';\nimport { loginUser, logoutUser } from '../redux/actions';\nimport {\n  selectUser,\n  selectUserAuthenticationError,\n  selectUserError,\n  selectUserIsAuthenticated,\n  selectUserIsLoading,\n} from '../redux/selectors';\nimport { toJS } from '~/core/util/ToJs';\n\nconst getDisplayName = WrappedComponent => {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nconst withLogin = WrappedComponent => {\n  // Returns a redux-connected component with the following props:\n  // this.propTypes = {\n  //   loading: PropTypes.bool,\n  //   authenticated: PropTypes.bool,\n  //   authenticationError: PropTypes.bool,\n  //   error: PropTypes.bool,\n  //   user: PropTypes.object,\n  //   logoutUser: PropTypes.func,\n  //   isHeaderLogin: PropTypes.bool,\n  // };\n\n  const mapStateToProps = state => {\n    return {\n      authenticationError: selectUserAuthenticationError(state),\n      error: selectUserError(state),\n      isAuthenticated: selectUserIsAuthenticated(state),\n      isLoading: selectUserIsLoading(state),\n      user: selectUser(state),\n    };\n  };\n\n  const mapDispatchToProps = {\n    loginUser,\n    logoutUser,\n  };\n\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(toJS(WrappedComponent));\n\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\n\n  return ConnectedComponent;\n};\n\nexport default withLogin;\n","import { connect } from 'react-redux';\nimport { registerUser } from '../redux/actions';\nimport {\n  selectUserRegistration,\n  selectUserRegistrationError,\n  selectUserRegistrationIsLoading,\n  selectUserRegistrationIsSuccess,\n} from '../redux/selectors';\nimport { toJS } from '~/core/util/ToJs';\n\nconst getDisplayName = WrappedComponent => {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nconst withRegistration = WrappedComponent => {\n  // Returns a redux-connected component with the following props:\n  // this.propTypes = {\n  //   registerUser: PropTypes.func,\n  //   isLoading: PropTypes.bool,\n  //   isSuccess: PropTypes.bool,\n  //   error: PropTypes.bool | PropTypes.object,\n  //   user: PropTypes.object,\n  // };\n\n  const mapStateToProps = state => {\n    return {\n      error: selectUserRegistrationError(state),\n      isLoading: selectUserRegistrationIsLoading(state),\n      isSuccess: selectUserRegistrationIsSuccess(state),\n      user: selectUserRegistration(state),\n    };\n  };\n\n  const mapDispatchToProps = {\n    registerUser,\n  };\n\n  const ConnectedComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(toJS(WrappedComponent));\n\n  ConnectedComponent.displayName = `${getDisplayName(WrappedComponent)}`;\n\n  return ConnectedComponent;\n};\n\nexport default withRegistration;\n"],"names":["loginUser","username","password","action","LOGIN_USER","logoutUser","redirectPath","LOGOUT_USER","registerUser","user","mappers","REGISTER_USER","useLogin","dispatch","useDispatch","select","useSelector","authenticationError","selectUserAuthenticationError","error","selectUserError","isAuthenticated","selectUserIsAuthenticated","isLoading","selectUserIsLoading","selectUser","toJS","LoginContainer","children","props","userProps","propTypes","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useRegistration","getDisplayName","WrappedComponent","displayName","name","withLogin","mapStateToProps","state","mapDispatchToProps","ConnectedComponent","connect","withRegistration"],"mappings":"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"}