{"version":3,"file":"routing-2e5b7b4f.js","sources":["../src/app/core/util/helpers.js","../src/app/core/redux/types/routing.js","../src/app/core/redux/actions/routing.js","../src/app/core/util/navigation.js","../src/app/core/redux/selectors/routing.js"],"sourcesContent":["export function action(type, payload = {}) {\n  return { type, ...payload };\n}\n\nexport const getWebPImageUri = uri => {\n  let formatedUri = uri;\n  if (uri.indexOf('.gif') == -1) {\n    if (uri.indexOf('f=') == -1 && uri.indexOf('format=') == -1) {\n      if (uri.indexOf('?') > -1) {\n        formatedUri = `${uri}&f=webp`;\n      } else {\n        formatedUri = `${uri}?f=webp`;\n      }\n    }\n    if (\n      formatedUri.indexOf('q=') == -1 &&\n      formatedUri.indexOf('quality=') == -1\n    ) {\n      if (formatedUri.indexOf('?') > -1) {\n        formatedUri = `${formatedUri}&q=70`;\n      } else {\n        formatedUri = `${formatedUri}?q=70`;\n      }\n    }\n  }\n  return formatedUri;\n};\n\nexport const resizeImage = (image, height, width) => {\n  if (image.asset && image.asset.sys && image.asset.sys.uri) {\n    image.asset.sys.uri = resizeImageUri(image.asset.sys.uri, height, width);\n  }\n};\nexport const resizeImageUri = (uri, height, width) => {\n  let formatedUri = uri;\n  let paramDelimeter = '?';\n  if (uri.indexOf('?') > -1) {\n    paramDelimeter = '&';\n  }\n  if (width) {\n    if (\n      formatedUri.indexOf('w=') == -1 &&\n      formatedUri.indexOf('width=') == -1\n    ) {\n      formatedUri = `${formatedUri}${paramDelimeter}w=${width}`;\n      paramDelimeter = '&';\n    }\n  }\n  if (height) {\n    if (\n      formatedUri.indexOf('h=') == -1 &&\n      formatedUri.indexOf('height=') == -1\n    ) {\n      formatedUri = `${formatedUri}${paramDelimeter}h=${height}`;\n    }\n  }\n\n  return formatedUri;\n};\n\nexport function flattenArray(arr) {\n  // flatten arrays inside the supplied array and\n  // remove duplicates from the result\n  return arr\n    .reduce((acc, val) => acc.concat(val), [])\n    .filter((elem, pos, arr) => arr.indexOf(elem) == pos);\n}\n\nexport async function api(url, options) {\n  return fetch(url, options)\n    .then(async response => {\n      setTimeout(() => null, 0);\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json().then(data => data);\n    })\n    .catch(error => {\n      //console.log(error);\n      throw error;\n    });\n}\n\nexport function dynamicSort(property) {\n  var sortOrder = 1;\n  if (property[0] === '-') {\n    sortOrder = -1;\n    property = property.substr(1);\n  }\n  return function(a, b) {\n    /* next line works with strings and numbers,\n     * and you may want to customize it to your needs\n     */\n    var result =\n      a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n    return result * sortOrder;\n  };\n}\n\nexport const randomString = length => {\n  let text = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n};\n\nexport const findContentTypeMapping = (ContentTypeMappings, contentTypeId) =>\n  ContentTypeMappings.find(ct => ct.contentTypeID === contentTypeId);\n","const ROUTING_PREFIX = '@ROUTING/';\nexport const GET_ENTRY = `${ROUTING_PREFIX}_GET_ENTRY`;\nexport const SET_ENTRY = `${ROUTING_PREFIX}_SET_ENTRY`;\nexport const SET_NODE = `${ROUTING_PREFIX}_SET_NODE`;\nexport const SET_ANCESTORS = `${ROUTING_PREFIX}_SET_ANCESTORS`;\nexport const SET_SIBLINGS = `${ROUTING_PREFIX}_SET_SIBLINGS`;\nexport const SET_ENTRY_ID = `${ROUTING_PREFIX}_SET_ENTRY_ID`;\nexport const SET_SURROGATE_KEYS = `${ROUTING_PREFIX}_SET_SURROGATE_KEYS`;\n\nexport const SET_NAVIGATION_NOT_FOUND = `${ROUTING_PREFIX}_SET_NOT_FOUND`;\nexport const SET_NAVIGATION_PATH = `${ROUTING_PREFIX}_SET_NAVIGATION_PATH`;\n\nexport const SET_TARGET_PROJECT = `${ROUTING_PREFIX}_SET_TARGET_PROJECT`;\n\nexport const SET_ROUTE = `${ROUTING_PREFIX}_SET_ROUTE`;\nexport const CALL_HISTORY_METHOD = `${ROUTING_PREFIX}_CALL_HISTORY_METHOD`;\n\nexport const UPDATE_LOADING_STATE = `${ROUTING_PREFIX}_UPDATE_LOADING_STATE`;\n","import { action } from '~/core/util/helpers';\nimport {\n  SET_ENTRY,\n  SET_NAVIGATION_NOT_FOUND,\n  SET_NAVIGATION_PATH,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SURROGATE_KEYS,\n} from '~/core/redux/types/routing';\n\nexport const setNotFound = notFound =>\n  action(SET_NAVIGATION_NOT_FOUND, { notFound });\nexport const setNavigationPath = (\n  path,\n  location,\n  staticRoute,\n  withEvents,\n  statePath,\n  routes\n) =>\n  action(SET_NAVIGATION_PATH, {\n    path,\n    location,\n    staticRoute,\n    withEvents,\n    statePath,\n    routes,\n  });\nexport const setCurrentProject = (project, allowedGroups) =>\n  action(SET_TARGET_PROJECT, { project, allowedGroups });\nexport const setRoute = (path, state) => action(SET_ROUTE, { path, state });\nexport const setRouteEntry = entry => action(SET_ENTRY, { entry });\nexport const setSurrogateKeys = keys => action(SET_SURROGATE_KEYS, { keys });\n","import queryString from 'query-string';\n\nexport function queryParams(search) {\n  return queryString.parse(\n    typeof window != 'undefined' ? window.location.search : search\n  );\n}\nexport const routeParams = staticRoute =>\n  staticRoute && staticRoute.match ? staticRoute.match.params : {};\n\nexport const buildUrl = (route, params) => {\n  const qs = queryString.stringify(params);\n  const path = qs ? `${route}?${qs}` : route;\n  return path;\n};\n\nexport const clientHostname = () =>\n  `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n\nexport const addHostname =\n  typeof window == 'undefined' || window.location.host == 'localhost:3000'\n    ? `https://${PUBLIC_URI /* global PUBLIC_URI */}`\n    : clientHostname();\n","import { List, Map } from 'immutable';\nimport { queryParams } from '~/core/util/navigation';\n\nexport const selectRouteEntry = state => {\n  return state.getIn(['routing', 'entry'], Map());\n};\nexport const selectMappedEntry = state => {\n  return state.getIn(['routing', 'mappedEntry'], null);\n};\nexport const selectNodeDepends = state => {\n  return state.getIn(['routing', 'nodeDepends'], List());\n};\nexport const selectCurrentTreeID = state => {\n  return state.getIn(['routing', 'currentTreeId']);\n};\nexport const selectRouteEntryEntryId = state => {\n  return state.getIn(['routing', 'entry', 'sys', 'id'], null);\n};\nexport const selectRouteEntryContentTypeId = state => {\n  const entry = selectRouteEntry(state);\n  return entry && entry.getIn(['sys', 'contentTypeId'], null);\n};\nexport const selectRouteEntrySlug = state => {\n  return state.getIn(['routing', 'entry', 'sys', 'slug'], null);\n};\nexport const selectRouteEntryID = state => {\n  return state.getIn(['routing', 'entryID']);\n};\nexport const selectCurrentPath = state => {\n  return state.getIn(['routing', 'currentPath']);\n};\nexport const selectCurrentSearch = state => {\n  return state.getIn(['routing', 'location', 'search']);\n};\nexport const selectCurrentHash = state => {\n  return state.getIn(['routing', 'location', 'hash']);\n};\nexport const selectQueryStringAsObject = state =>\n  queryParams(selectCurrentSearch(state));\nexport const selectCurrentProject = state => {\n  return state.getIn(['routing', 'currentProject']);\n};\nexport const selectIsNotFound = state => {\n  return state.getIn(['routing', 'notFound']);\n};\nexport const selectCurrentAncestors = state => {\n  return state.getIn(['routing', 'currentNodeAncestors'], List());\n};\nexport const selectCurrentNode = state => {\n  return state.getIn(['routing', 'currentNode']);\n};\nexport const selectBreadcrumb = state => {\n  return (selectCurrentAncestors(state) || List()).push(\n    selectCurrentNode(state)\n  );\n};\nexport const selectRouteLoading = state => {\n  return state.getIn(['routing', 'isLoading']);\n};\n"],"names":["action","type","payload","findContentTypeMapping","ContentTypeMappings","contentTypeId","find","ct","contentTypeID","ROUTING_PREFIX","GET_ENTRY","SET_ENTRY","SET_NODE","SET_ANCESTORS","SET_SIBLINGS","SET_ENTRY_ID","SET_SURROGATE_KEYS","SET_NAVIGATION_NOT_FOUND","SET_NAVIGATION_PATH","SET_TARGET_PROJECT","SET_ROUTE","CALL_HISTORY_METHOD","UPDATE_LOADING_STATE","setNotFound","notFound","setNavigationPath","path","location","staticRoute","withEvents","statePath","routes","setCurrentProject","project","allowedGroups","setRoute","state","setRouteEntry","entry","setSurrogateKeys","keys","queryParams","search","queryString","parse","window","clientHostname","protocol","hostname","port","addHostname","host","PUBLIC_URI","selectRouteEntry","getIn","Map","selectMappedEntry","selectNodeDepends","List","selectCurrentTreeID","selectRouteEntryEntryId","selectRouteEntryContentTypeId","selectRouteEntrySlug","selectRouteEntryID","selectCurrentPath","selectCurrentSearch","selectCurrentHash","selectQueryStringAsObject","selectCurrentProject","selectIsNotFound","selectCurrentAncestors","selectCurrentNode","selectBreadcrumb","push","selectRouteLoading"],"mappings":"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"}