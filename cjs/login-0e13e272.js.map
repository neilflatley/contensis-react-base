{"version":3,"file":"login-0e13e272.js","sources":["../src/app/core/util/fromJSOrdered.js","../src/app/features/login/redux/types.js","../src/app/features/login/redux/reducers.js","../src/app/core/util/ContensisManagementApi.js","../src/app/features/login/transformations/mapClientCredentials.js","../src/app/features/login/util/CookieHelper.class.js","../src/app/features/login/util/OidcUserManager.js","../src/app/features/login/util/LoginHelper.class.js","../src/app/features/login/redux/sagas/login.js"],"sourcesContent":["import { Seq } from 'immutable';\n\nconst fromJSOrdered = js => {\n  return typeof js !== 'object' || js === null\n    ? js\n    : Array.isArray(js)\n    ? Seq(js)\n        .map(fromJSOrdered)\n        .toList()\n    : Seq(js)\n        .map(fromJSOrdered)\n        .toOrderedMap();\n};\n\nexport default fromJSOrdered;\n","const ACTION_PREFIX = '@USER/';\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\n","import { List, Map } from 'immutable';\nimport fromJSOrdered from '~/core/util/fromJSOrdered';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_FAILED,\n  REGISTER_USER_SUCCESS,\n  SET_AUTHENTICATION_STATE,\n  LOGIN_USER,\n  LOGOUT_USER,\n} from './types';\n\nconst defaultAuthenticationState = Map({\n  authenticated: false,\n  authenticationError: false,\n  clientCredentials: null,\n  error: false,\n  loading: false,\n});\n\nexport const initialUserState = Map({\n  authenticationState: defaultAuthenticationState,\n  groups: new List([]),\n});\n\nexport default (state = initialUserState, action) => {\n  switch (action.type) {\n    case LOGIN_USER:\n    case LOGOUT_USER:\n    case SET_AUTHENTICATION_STATE: {\n      if (!action.authenticationState) {\n        action.authenticationState = defaultAuthenticationState.toJS();\n      }\n\n      const loading = action.type === LOGIN_USER;\n\n      const {\n        authenticationState: {\n          error = false,\n          authenticated,\n          authenticationError = false,\n          clientCredentials = null,\n        },\n        user,\n      } = action;\n\n      if (user) {\n        user.name = `${user.firstName} ${user.lastName}`;\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\n      }\n\n      const nextState = {\n        ...initialUserState.toJS(),\n        ...(user || state.toJS()),\n        authenticationState: {\n          authenticated:\n            authenticated ||\n            state.getIn(['authenticationState', 'authenticated']),\n          authenticationError,\n          clientCredentials,\n          error,\n          loading,\n        },\n      };\n      return fromJSOrdered(nextState);\n    }\n    // REGISTER_USER is the trigger to set the user.registration initial state\n    // and will set user.registration.loading to true\n    // REGISTER_USER_FAILED will unset user.registration.loading and will set\n    // the value in user.registration.error\n    // REGISTER_USER_SUCCESS will unset user.registration.loading and will\n    // set user.registration to the created user from the api response\n    case REGISTER_USER:\n    case REGISTER_USER_FAILED:\n    case REGISTER_USER_SUCCESS: {\n      const { error, user } = action;\n\n      // Set registration object from the supplied action.user\n      // so we can call these values back later\n      const nextState = state.set(\n        'registration',\n        user ? fromJSOrdered(user) : state.get('registration', Map())\n      );\n\n      // Set registration flags so the UI can track the status\n      return nextState\n        .setIn(\n          ['registration', 'success'],\n          action.type === REGISTER_USER_SUCCESS\n        )\n        .setIn(['registration', 'error'], error || false)\n        .setIn(['registration', 'loading'], action.type === REGISTER_USER);\n    }\n    default:\n      return state;\n  }\n};\n","// import { Client } from 'contensis-management-api';\n\nexport const getManagementApiClient = async ({\n  bearerToken,\n  bearerTokenExpiryDate,\n  refreshToken,\n  refreshTokenExpiryDate,\n  contensisClassicToken,\n  username,\n  password,\n}) => {\n  const rootUrl = SERVERS.api || SERVERS.cms; /* global SERVERS */\n  const projectId = PROJECTS[0].id; /* global PROJECTS */\n\n  let config = {};\n  if (refreshToken) {\n    config = {\n      clientType: 'contensis_classic_refresh_token',\n      clientDetails: {\n        refreshToken,\n      },\n    };\n  } else {\n    config = {\n      clientType: 'contensis_classic',\n      clientDetails: {\n        username,\n        password,\n      },\n    };\n  }\n  const { Client } = await import('contensis-management-api');\n\n  const client = Client.create({\n    ...config,\n    projectId,\n    rootUrl,\n  });\n\n  if (bearerToken) client.bearerToken = bearerToken;\n  if (bearerTokenExpiryDate)\n    client.bearerTokenExpiryDate = bearerTokenExpiryDate;\n  if (refreshToken) client.refreshToken = refreshToken;\n  if (refreshTokenExpiryDate)\n    client.refreshTokenExpiryDate = refreshTokenExpiryDate;\n  if (contensisClassicToken)\n    client.contensisClassicToken = contensisClassicToken;\n\n  return client;\n};\n","import { mapJson } from '~/core/util/json-mapper';\n\nconst clientCredentials = {\n  bearerToken: 'bearerToken',\n  bearerTokenExpiryDate: ({ bearerTokenExpiryDate }) =>\n    bearerTokenExpiryDate.toISOString(),\n  refreshToken: 'refreshToken',\n  refreshTokenExpiryDate: ({ refreshTokenExpiryDate }) =>\n    refreshTokenExpiryDate.toISOString(),\n  contensisClassicToken: 'contensisClassicToken',\n};\nexport default obj => mapJson(obj, clientCredentials);\n","import Cookies from 'js-cookie';\n\nconst COOKIE_VALID_DAYS = 1; // 0 = Session cookie\n\n// Override the default js-cookie conversion / encoding\n// methods so the written values work with Contensis sites\nconst _cookie = Cookies.withConverter({\n  read: value => decodeURIComponent(value),\n  write: value => encodeURIComponent(value),\n});\n\nexport class CookieHelper {\n  static GetCookie(name) {\n    let cookie = _cookie.get(name);\n    if (typeof cookie == 'undefined') {\n      return null;\n    }\n    return cookie;\n  }\n\n  static SetCookie(name, value, maxAgeDays = COOKIE_VALID_DAYS) {\n    maxAgeDays === 0\n      ? _cookie.set(name, value)\n      : _cookie.set(name, value, { expires: maxAgeDays });\n  }\n\n  static DeleteCookie(name) {\n    _cookie.remove(name);\n  }\n}\n","const context = typeof window != 'undefined' ? window : global;\nconst requireOidc =\n  process.env.NODE_ENV === 'development'\n    ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\n    : context.WSFED_LOGIN === 'true';\n\nconst servers = SERVERS; /* global SERVERS */\n\nconst userManagerConfig =\n  typeof window !== 'undefined'\n    ? {\n        authority: `${servers.cms}/authenticate/`,\n        client_id: 'WebsiteAdfsClient',\n        redirect_uri: window.location.toString(),\n        post_logout_redirect_uri: window.location.toString(),\n        response_type: 'id_token',\n        scope: 'openid',\n        filterProtocolClaims: false,\n      }\n    : {};\n\nconst createUserManager = config => {\n  if (typeof window !== 'undefined' && requireOidc) {\n    try {\n      const UserManager = require('oidc-client').UserManager;\n      return new UserManager(config);\n    } catch (e) {\n      //\n    }\n  } else return {};\n};\n\nconst userManager = createUserManager(userManagerConfig);\n\nexport default userManager;\n","/* eslint-disable require-atomic-updates */\nimport { getManagementApiClient } from '~/core/util/ContensisManagementApi';\nimport { to } from 'await-to-js';\n\nimport { CookieHelper } from './CookieHelper.class';\n\nimport mapClientCredentials from '../transformations/mapClientCredentials';\nimport userManager from './OidcUserManager';\n\nexport const LOGIN_COOKIE = 'ContensisCMSUserName';\nexport const REFRESH_TOKEN_COOKIE = 'RefreshToken';\n\nconst context = typeof window != 'undefined' ? window : global;\n\nexport class LoginHelper {\n  static CMS_URL = SERVERS.cms /* global SERVERS */;\n  static WSFED_LOGIN =\n    process.env.NODE_ENV === 'development'\n      ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\n      : context.WSFED_LOGIN === 'true';\n  static LOGIN_ROUTE = '/account/login';\n  static ACCESS_DENIED_ROUTE = '/account/access-denied';\n\n  static SetLoginCookies({ contensisClassicToken, refreshToken }) {\n    if (contensisClassicToken)\n      CookieHelper.SetCookie(LOGIN_COOKIE, contensisClassicToken);\n    if (refreshToken)\n      CookieHelper.SetCookie(REFRESH_TOKEN_COOKIE, refreshToken);\n  }\n\n  static GetCachedCredentials() {\n    return {\n      bearerToken: null,\n      bearerTokenExpiryDate: null,\n      refreshToken: CookieHelper.GetCookie(REFRESH_TOKEN_COOKIE),\n      refreshTokenExpiryDate: null,\n      contensisClassicToken: CookieHelper.GetCookie(LOGIN_COOKIE),\n    };\n  }\n\n  static ClearCachedCredentials() {\n    CookieHelper.DeleteCookie(LOGIN_COOKIE);\n    CookieHelper.DeleteCookie(REFRESH_TOKEN_COOKIE);\n  }\n\n  static async LoginUser({ username, password, clientCredentials }) {\n    let credentials = clientCredentials;\n    let authenticationState = {\n      authenticated: false,\n      authenticationError: false,\n      error: false,\n      clientCredentials: null,\n    };\n    let transientClient;\n    let user;\n\n    if (username && password) {\n      // Get a management client with username and password\n      transientClient = await getManagementApiClient({\n        username,\n        password,\n      });\n\n      // Ensure the client has requested a bearer token\n      const [loginError, clientBearerToken] = await to(\n        transientClient.ensureBearerToken()\n      );\n\n      // Problem getting token with username and password\n      if (loginError) {\n        const authenticationError = loginError.name.includes(\n          'ContensisAuthenticationError'\n        );\n        authenticationState = {\n          authenticated: false,\n          authenticationError: authenticationError,\n          error: !authenticationError,\n          clientCredentials: null,\n        };\n        LoginHelper.ClearCachedCredentials();\n      }\n\n      // Got a token using username and password\n      if (clientBearerToken) {\n        // Set credentials so we can continue to GetUserDetails\n        credentials = mapClientCredentials(transientClient);\n        LoginHelper.SetLoginCookies(credentials);\n        authenticationState = {\n          authenticated: true,\n          authenticationError: false,\n          error: false,\n          clientCredentials: credentials,\n        };\n      }\n    }\n\n    // If we have credentials supplied by a successful username and password login\n    // or clientCredentials supplied in the options argument we can continue to\n    // fetch the user's details\n    if (credentials) {\n      const client =\n        transientClient || (await getManagementApiClient(credentials));\n      const [error, userDetails] = await LoginHelper.GetUserDetails(client);\n\n      if (error) {\n        authenticationState = {\n          authenticated: false,\n          authenticationError: false,\n          error: { message: error.message, stack: error.stack },\n          clientCredentials: null,\n        };\n        LoginHelper.ClearCachedCredentials();\n      } else {\n        user = userDetails;\n        authenticationState = {\n          authenticated: true,\n          authenticationError: false,\n          error: false,\n          clientCredentials: credentials,\n        };\n      }\n    }\n\n    return { authenticationState, user };\n  }\n\n  static GetUserDetails = async client => {\n    let userError,\n      groupsError,\n      user = {},\n      groupsResult;\n\n    [userError, user] = await to(client.security.users.getCurrent());\n    if (user && user.id) {\n      [groupsError, groupsResult] = await to(\n        client.security.users.getUserGroups({\n          userId: user.id,\n          includeInherited: true,\n        })\n      );\n      // Set groups attribute in user object to be the items\n      // array from the getUserGroups result\n      if (groupsResult && groupsResult.items) user.groups = groupsResult.items;\n\n      //If groups call fails then log the error but allow the user to login still\n      // eslint-disable-next-line no-console\n      if (groupsError) console.log(groupsError);\n    }\n    return [userError, user];\n  };\n\n  static LogoutUser(redirectPath) {\n    LoginHelper.ClearCachedCredentials();\n    if (LoginHelper.WSFED_LOGIN) {\n      LoginHelper.WsFedLogout(redirectPath);\n    } else {\n      if (redirectPath) LoginHelper.ClientRedirectToPath(redirectPath);\n      else LoginHelper.ClientRedirectToSignInPage();\n    }\n  }\n\n  static ClientRedirectToHome(location) {\n    if (typeof window != 'undefined') {\n      let url = '/';\n      if (location) {\n        const { search, hash } = location.toJS();\n        url = search ? `${url}${search}` : url;\n        url = hash ? `${url}${hash}` : url;\n      }\n      window.location.href = url;\n    }\n  }\n\n  static async ClientRedirectToSignInPage(redirectPath) {\n    if (LoginHelper.WSFED_LOGIN) {\n      await LoginHelper.WsFedLogout();\n      LoginHelper.WsFedLogin();\n    } else {\n      // Standard Contensis Login\n      let url = LoginHelper.LOGIN_ROUTE;\n      if (typeof redirectPath === 'string')\n        url = `${url}?redirect_uri=${redirectPath}`;\n      if (\n        typeof location !== 'undefined' &&\n        redirectPath !== LoginHelper.LOGIN_ROUTE\n      )\n        location.replace(url);\n    }\n  }\n\n  static ClientRedirectToAccessDeniedPage(originalPath) {\n    let url = LoginHelper.ACCESS_DENIED_ROUTE;\n    if (originalPath === url) return;\n\n    if (typeof originalPath === 'string')\n      url = `${url}?original_uri=${originalPath}`;\n    if (typeof location !== 'undefined') location.href = url;\n  }\n\n  static ClientRedirectToPath(redirectPath) {\n    if (typeof redirectPath === 'string') {\n      if (typeof location !== 'undefined') window.location.href = redirectPath;\n    } else LoginHelper.ClientRedirectToHome();\n  }\n\n  static WsFedLogin(redirectUri) {\n    userManager.signinRedirect({\n      scope: 'openid',\n      response_type: 'id_token',\n      redirect_uri: redirectUri || window.location.toString(),\n    });\n  }\n\n  static async WsFedLogout(redirectPath) {\n    await fetch(\n      `${LoginHelper.CMS_URL}/authenticate/logout?jsonResponseRequired=true`,\n      {\n        credentials: 'include',\n      }\n    );\n    if (redirectPath) {\n      window.location = redirectPath;\n    }\n  }\n\n  static async GetCredentialsForSecurityToken(securityToken) {\n    const [error, response] = await to(\n      fetch(`${LoginHelper.CMS_URL}/REST/Contensis/Security/IsAuthenticated`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          securityToken: encodeURIComponent(securityToken),\n        }),\n      })\n    );\n    if (error) return [{ message: 'Failed to fetch credentials' }];\n    if (response.ok) {\n      const [parseError, body] = await to(response.json());\n      if (parseError) return [parseError];\n\n      const { LogonResult, ApplicationData = [] } = body;\n      if (LogonResult !== 0) {\n        return [\n          { message: 'Security token is invalid', data: ApplicationData },\n        ];\n      }\n      if (\n        ApplicationData.length > 1 &&\n        ApplicationData[1].Key === 'ContensisSecurityRefreshToken'\n      ) {\n        const refreshToken = ApplicationData[1].Value;\n        return [undefined, refreshToken];\n      } else {\n        return [\n          {\n            message:\n              'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\n          },\n        ];\n      }\n    } else {\n      return [\n        {\n          message: `Fetch credentials error: ${response.status} ${response.statusText}`,\n        },\n      ];\n    }\n  }\n\n  static isZengentiStaff(email) {\n    const emailRefs = ['@zengenti', '@contensis'];\n\n    return emailRefs.some(emailRef => {\n      if (email.includes(emailRef)) {\n        return true;\n      }\n    });\n  }\n}\n","import { Map } from 'immutable';\nimport { takeEvery, select, put, call } from 'redux-saga/effects';\nimport {\n  SET_AUTHENTICATION_STATE,\n  LOGIN_USER,\n  LOGOUT_USER,\n  VALIDATE_USER,\n} from '../types';\nimport {\n  selectUserIsAuthenticated,\n  selectClientCredentials,\n  selectUserGroups,\n} from '../selectors';\n\nimport { setRoute } from '~/core/redux/actions/routing';\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\nimport { getManagementApiClient } from '~/core/util/ContensisManagementApi';\nimport { findContentTypeMapping } from '~/core/util/helpers';\nimport { queryParams } from '~/core/util/navigation';\nimport mapClientCredentials from '../../transformations/mapClientCredentials';\nimport { LoginHelper } from '../../util/LoginHelper.class';\nimport { matchUserGroup } from '../../util/matchGroups';\n\nexport const loginSagas = [\n  takeEvery(LOGIN_USER, loginUserSaga),\n  takeEvery(LOGOUT_USER, logoutUserSaga),\n  takeEvery(VALIDATE_USER, validateUserSaga),\n  takeEvery(SET_AUTHENTICATION_STATE, redirectAfterSuccessfulLoginSaga),\n];\n\nexport function* handleRequiresLoginSaga(action) {\n  const {\n    entry,\n    requireLogin,\n    routes: { ContentTypeMappings },\n    staticRoute,\n  } = action;\n  let userLoggedIn = yield select(selectUserIsAuthenticated);\n\n  // Check for a securityToken in querystring\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const securityToken = currentQs.securityToken || currentQs.securitytoken;\n\n  // Check if any of the defined routes have \"requireLogin\" attribute\n  const { requireLogin: authRoute } = (staticRoute && staticRoute.route) || {};\n  const { requireLogin: authContentType } =\n    (entry &&\n      findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId)) ||\n    {};\n\n  // If requireLogin, authRoute or authContentType has been specified as an\n  // array of groups we can merge all the arrays and match on any group supplied\n  const routeRequiresGroups = [\n    ...((Array.isArray(authContentType) && authContentType) || []),\n    ...((Array.isArray(authRoute) && authRoute) || []),\n    ...((Array.isArray(requireLogin) && requireLogin) || []),\n  ];\n  const routeRequiresLogin = !!authContentType || !!authRoute || !!requireLogin;\n\n  if (!userLoggedIn) {\n    // If cookies or securityToken are found on any route change\n    // always validate and login the user\n    if (routeRequiresLogin) {\n      // If routeRequiresLogin do a blocking call that returns userLoggedIn\n      userLoggedIn = yield call(validateUserSaga, { securityToken });\n    }\n    // otherwise do a non blocking put to handle validation in the background\n    else yield put({ type: VALIDATE_USER, securityToken });\n  }\n\n  if (routeRequiresLogin) {\n    // If a security token is in the querystring and we are not already\n    // logged in something is wrong and we won't bother going on another redirect loop\n    if (!userLoggedIn && !securityToken) {\n      LoginHelper.ClientRedirectToSignInPage(action.location.pathname);\n    } else if (routeRequiresGroups.length > 0) {\n      const userGroups = (yield select(selectUserGroups)).toJS();\n      const groupMatch = matchUserGroup(userGroups, routeRequiresGroups);\n\n      if (!groupMatch)\n        LoginHelper.ClientRedirectToAccessDeniedPage(action.location.pathname);\n    }\n  }\n}\n\nfunction* validateUserSaga({ securityToken }) {\n  if (securityToken) {\n    // If we have just a security token we will call a CMS endpoint\n    // and provide us with a RefreshToken cookie we can use during login\n    const [\n      error,\n      refreshToken,\n    ] = yield LoginHelper.GetCredentialsForSecurityToken(securityToken);\n    if (refreshToken)\n      LoginHelper.SetLoginCookies({\n        contensisClassicToken: securityToken,\n        refreshToken,\n      });\n    if (error)\n      yield put({\n        type: SET_AUTHENTICATION_STATE,\n        authenticationState: {\n          error: { message: error.message, stack: error.stack },\n        },\n      });\n  }\n\n  // Check for refreshToken in cookies\n  const clientCredentials = LoginHelper.GetCachedCredentials();\n\n  // Log the user in if a refreshToken is found\n  if (clientCredentials.refreshToken)\n    yield call(loginUserSaga, { clientCredentials });\n\n  // Tell any callers have we successfully logged in?\n  return yield select(selectUserIsAuthenticated);\n}\n\nfunction* loginUserSaga(action = {}) {\n  const { username, password, clientCredentials } = action;\n\n  // If a WSFED_LOGIN site has dispatched the loginUser action\n  // just redirect them to the Identity Provider sign in\n  if (action.type === LOGIN_USER && LoginHelper.WSFED_LOGIN)\n    LoginHelper.ClientRedirectToSignInPage();\n\n  const { authenticationState, user } = yield LoginHelper.LoginUser({\n    username,\n    password,\n    clientCredentials,\n  });\n\n  yield put({\n    type: SET_AUTHENTICATION_STATE,\n    authenticationState,\n    user,\n  });\n}\n\nfunction* redirectAfterSuccessfulLoginSaga() {\n  const isLoggedIn = yield select(selectUserIsAuthenticated);\n  const redirectPath = queryParams(yield select(selectCurrentSearch))\n    .redirect_uri;\n\n  if (isLoggedIn && redirectPath) {\n    yield put(setRoute(redirectPath));\n  }\n}\n\nfunction* logoutUserSaga({ redirectPath }) {\n  yield put({\n    type: SET_AUTHENTICATION_STATE,\n    user: null,\n  });\n  yield LoginHelper.LogoutUser(redirectPath);\n}\n\nexport function* refreshSecurityToken() {\n  const clientCredentials = (\n    (yield select(selectClientCredentials)) || Map()\n  ).toJS();\n  if (Object.keys(clientCredentials).length > 0) {\n    const client = yield getManagementApiClient(clientCredentials);\n    yield client.authenticate();\n\n    const authenticationState = {};\n\n    const newClientCredentials = mapClientCredentials(client);\n\n    authenticationState.clientCredentials = newClientCredentials;\n\n    yield put({\n      type: SET_AUTHENTICATION_STATE,\n      authenticationState,\n    });\n  }\n}\n"],"names":["fromJSOrdered","js","Array","isArray","Seq","map","toList","toOrderedMap","ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","defaultAuthenticationState","Map","authenticated","authenticationError","clientCredentials","error","loading","initialUserState","authenticationState","groups","List","state","action","type","toJS","user","name","firstName","lastName","isZengentiStaff","email","includes","nextState","getIn","set","get","setIn","getManagementApiClient","bearerToken","bearerTokenExpiryDate","refreshToken","refreshTokenExpiryDate","contensisClassicToken","username","password","rootUrl","SERVERS","api","cms","projectId","PROJECTS","id","config","clientType","clientDetails","Client","client","create","toISOString","obj","mapJson","COOKIE_VALID_DAYS","_cookie","Cookies","withConverter","read","value","decodeURIComponent","write","encodeURIComponent","CookieHelper","GetCookie","cookie","SetCookie","maxAgeDays","expires","DeleteCookie","remove","context","window","global","requireOidc","process","env","NODE_ENV","WSFED_LOGIN","servers","userManagerConfig","authority","client_id","redirect_uri","location","toString","post_logout_redirect_uri","response_type","scope","filterProtocolClaims","createUserManager","UserManager","require","e","userManager","LOGIN_COOKIE","REFRESH_TOKEN_COOKIE","LoginHelper","SetLoginCookies","GetCachedCredentials","ClearCachedCredentials","LoginUser","credentials","transientClient","loginError","clientBearerToken","to","ensureBearerToken","mapClientCredentials","userDetails","GetUserDetails","message","stack","LogoutUser","redirectPath","WsFedLogout","ClientRedirectToPath","ClientRedirectToSignInPage","ClientRedirectToHome","url","search","hash","href","WsFedLogin","LOGIN_ROUTE","replace","ClientRedirectToAccessDeniedPage","originalPath","ACCESS_DENIED_ROUTE","redirectUri","signinRedirect","fetch","CMS_URL","GetCredentialsForSecurityToken","securityToken","response","method","headers","Accept","body","JSON","stringify","ok","parseError","json","LogonResult","ApplicationData","data","length","Key","Value","undefined","status","statusText","emailRefs","some","emailRef","userError","groupsError","groupsResult","security","users","getCurrent","getUserGroups","userId","includeInherited","items","console","log","loginSagas","takeEvery","loginUserSaga","logoutUserSaga","validateUserSaga","redirectAfterSuccessfulLoginSaga","handleRequiresLoginSaga","entry","requireLogin","routes","ContentTypeMappings","staticRoute","userLoggedIn","select","selectUserIsAuthenticated","currentQs","queryParams","selectCurrentSearch","securitytoken","authRoute","route","authContentType","findContentTypeMapping","sys","contentTypeId","routeRequiresGroups","routeRequiresLogin","call","put","pathname","userGroups","selectUserGroups","groupMatch","matchUserGroup","isLoggedIn","setRoute","refreshSecurityToken","selectClientCredentials","Object","keys","authenticate","newClientCredentials"],"mappings":"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"}