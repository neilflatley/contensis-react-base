{"version":3,"file":"App-d34dfa18.js","sources":["../src/app/core/redux/history.js","../src/app/core/util/pickProject.js","../src/app/core/util/ContensisDeliveryApi.js","../src/app/core/redux/sagas/navigation.js","../src/app/core/schema.js","../src/app/core/search/expressions.js","../src/app/core/redux/sagas/queries.js","../src/app/core/redux/sagas/routing.js","../src/app/features/login/redux/sagas/register.js","../src/app/features/login/redux/sagas/index.js","../src/app/core/redux/sagas/index.js","../src/app/App.js"],"sourcesContent":["import { createBrowserHistory, createMemoryHistory } from 'history';\r\n\r\n// Create a history depending on the environment\r\nconst selectedHistory =\r\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\r\n\r\nexport const history = (options = {}) => selectedHistory(options);\r\nexport const browserHistory = selectedHistory();\r\n","const servers = SERVERS; /* global SERVERS */\r\nconst alias = servers.alias.toLowerCase();\r\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\r\nconst projects = PROJECTS; /* global PROJECTS */\r\n\r\n// return a projectId via the request hostname\r\nconst pickProject = (hostname, query) => {\r\n  // if localhost we can only infer via a querystring, and take your word for it\r\n  if (hostname == 'localhost') {\r\n    return (query && query.p) || projects[0].id;\r\n  }\r\n\r\n  // if hostname is the actual public uri we can return the first project from the list\r\n  if (hostname == publicUri) {\r\n    return projects[0].id;\r\n  }\r\n\r\n  let project = 'unknown';\r\n\r\n  // // go through all the defined projects\r\n  // Object.entries(projects).map(([, p]) => {\r\n  const p = projects[0];\r\n\r\n  // check if we're accessing via the project's public uri\r\n  if (hostname.includes(p.publicUri)) project = p.id;\r\n\r\n  // the url structure is different for website (we don't prefix)\r\n  if (p.id.startsWith('website')) {\r\n    // check for internal and external hostnames\r\n    // we check live and preview distinctly so our rule does not clash with\r\n    // hostnames that use a project prefix\r\n    if (\r\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\r\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`preview.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  } else {\r\n    // check for internal and external hostnames, prefixed with the projectId\r\n    if (\r\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  }\r\n  // });\r\n  return project === 'unknown' ? p.id : project;\r\n};\r\n\r\nexport default pickProject;\r\n","import { Client } from 'contensis-delivery-api';\r\nimport { setSurrogateKeys } from '../redux/actions/routing';\r\nimport { reduxStore } from '../redux/store';\r\n\r\nconst storeSurrogateKeys = response => {\r\n  const keys = response.headers.get\r\n    ? response.headers.get('surrogate-key')\r\n    : response.headers.map['surrogate-key'];\r\n  if (keys) reduxStore.dispatch(setSurrogateKeys(keys));\r\n};\r\n\r\nconst getClientConfig = project => {\r\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n  config.responseHandler = {};\r\n\r\n  if (project) {\r\n    config.projectId = project;\r\n  }\r\n\r\n  // // we only want the surrogate key header in a server context\r\n  if (typeof window === 'undefined') {\r\n    config.defaultHeaders = {\r\n      'x-require-surrogate-key': true,\r\n    };\r\n    config.responseHandler[200] = storeSurrogateKeys;\r\n  }\r\n\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n  ) {\r\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\r\n    config.rootUrl = '';\r\n    config.responseHandler[404] = () => null;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport * from 'contensis-delivery-api';\r\n\r\nclass DeliveryApi {\r\n  getClientSideVersionStatus = () => {\r\n    if (typeof window != 'undefined') {\r\n      const currentHostname = window.location.hostname;\r\n      return this.getVersionStatusFromHostname(currentHostname);\r\n    }\r\n    return null;\r\n  };\r\n  getVersionStatusFromHostname = currentHostname => {\r\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\r\n\r\n    if (currentHostname.endsWith('contensis.cloud')) {\r\n      if (currentHostname.indexOf('preview.') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    if (currentHostname.endsWith('cloud.contensis.com')) {\r\n      if (currentHostname.indexOf('preview-') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    return 'published';\r\n  };\r\n  search = (query, linkDepth, project, env) => {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return client.entries.search(\r\n      query,\r\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\r\n    );\r\n  };\r\n  getClient = (deliveryApiStatus = 'published', project, env) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    return Client.create(baseConfig);\r\n  };\r\n  getEntry = (\r\n    id,\r\n    linkDepth = 0,\r\n    deliveryApiStatus = 'published',\r\n    project,\r\n    env\r\n  ) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    const client = Client.create(baseConfig);\r\n    // return client.entries.get(id, linkDepth);\r\n    return client.entries.get({ id, linkDepth });\r\n  };\r\n}\r\n\r\nexport const deliveryApi = new DeliveryApi();\r\n\r\nclass CacheNode {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n\r\nclass LruCache {\r\n  constructor(limit = 100) {\r\n    this.map = {};\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.limit = limit || 100;\r\n    this.size = 0;\r\n  }\r\n\r\n  get(key) {\r\n    if (this.map[key]) {\r\n      let value = this.map[key].value;\r\n      let node = new CacheNode(key, value);\r\n      this.remove(key);\r\n      this.setHead(node);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  set(key, value) {\r\n    let node = new CacheNode(key, value);\r\n    if (this.map[key]) {\r\n      this.remove(key);\r\n    } else {\r\n      if (this.size >= this.limit) {\r\n        delete this.map[this.tail.key];\r\n        this.size--;\r\n        this.tail = this.tail.prev;\r\n        this.tail.next = null;\r\n      }\r\n    }\r\n    this.setHead(node);\r\n  }\r\n\r\n  setHead(node) {\r\n    node.next = this.head;\r\n    node.prev = null;\r\n    if (this.head) {\r\n      this.head.prev = node;\r\n    }\r\n    this.head = node;\r\n    if (!this.tail) {\r\n      this.tail = node;\r\n    }\r\n    this.size++;\r\n    this.map[node.key] = node;\r\n  }\r\n\r\n  remove(key) {\r\n    let node = this.map[key];\r\n    if (node.prev) {\r\n      node.prev.next = node.next;\r\n    } else {\r\n      this.head = node.next;\r\n    }\r\n    if (node.next) {\r\n      node.next.prev = node.prev;\r\n    } else {\r\n      this.tail = node.prev;\r\n    }\r\n    delete this.map[key];\r\n    this.size--;\r\n  }\r\n}\r\n\r\nclass CachedSearch {\r\n  cache = new LruCache();\r\n  taxonomyLookup = {};\r\n\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.search(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  get(id, linkDepth, versionStatus, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    client.clientConfig.versionStatus = versionStatus;\r\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\r\n  }\r\n\r\n  getContentType(id, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\r\n      client.contentTypes.get(id)\r\n    );\r\n  }\r\n\r\n  getTaxonomyNode(key, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\r\n      client.taxonomy\r\n        .resolveChildren(key)\r\n        .then(node => this.extendTaxonomyNode(node))\r\n    );\r\n  }\r\n\r\n  getRootNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\r\n      client.nodes.getRoot(options)\r\n    );\r\n  }\r\n\r\n  getNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.get(options)\r\n    );\r\n  }\r\n\r\n  getAncestors(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getAncestors(options)\r\n    );\r\n  }\r\n\r\n  getChildren(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getChildren(options)\r\n    );\r\n  }\r\n\r\n  getSiblings(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getSiblings(options)\r\n    );\r\n  }\r\n\r\n  request(key, execute) {\r\n    if (!this.cache.get(key) || typeof window == 'undefined') {\r\n      let promise = execute();\r\n      this.cache.set(key, promise);\r\n      promise.catch(() => {\r\n        this.cache.remove(key);\r\n      });\r\n    }\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  extendTaxonomyNode(node) {\r\n    let id = this.getTaxonomyId(node);\r\n    this.taxonomyLookup[id] = node.key;\r\n    return {\r\n      ...node,\r\n      id,\r\n      children: node.children\r\n        ? node.children.map(n => this.extendTaxonomyNode(n))\r\n        : null,\r\n    };\r\n  }\r\n\r\n  getTaxonomyId(node) {\r\n    if (node.key) {\r\n      let parts = node.key.split('/');\r\n      return parts[parts.length - 1];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getTaxonomyKey(id) {\r\n    return this.taxonomyLookup[id];\r\n  }\r\n}\r\n\r\nexport const cachedSearch = new CachedSearch();\r\n","import { takeEvery, put, select } from 'redux-saga/effects';\r\n\r\nimport { deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport {\r\n  GET_NODE_TREE,\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/core/redux/types/navigation';\r\nimport { hasNavigationTree } from '~/core/redux/selectors/navigation';\r\nimport { selectVersionStatus } from '../selectors/version';\r\nimport { selectCurrentProject } from '../selectors/routing';\r\n\r\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\r\n\r\nexport function* ensureNodeTreeSaga(action) {\r\n  const state = yield select();\r\n  try {\r\n    if (!hasNavigationTree(state)) {\r\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\r\n      const project = yield select(selectCurrentProject);\r\n      const nodes = yield deliveryApi\r\n        .getClient(deliveryApiVersionStatus, project)\r\n        .nodes.getRoot({\r\n          depth: action.treeDepth || 0,\r\n        });\r\n      if (nodes) {\r\n        yield put({ type: SET_NODE_TREE, nodes });\r\n      } else {\r\n        yield put({ type: GET_NODE_TREE_ERROR });\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\r\n  }\r\n}\r\n","export const DataFormats = {\r\n  entry: 'entry',\r\n  webpage: 'webpage',\r\n};\r\n\r\nconst sys = {\r\n  contentTypeId: 'sys.contentTypeId',\r\n  dataFormat: 'sys.dataFormat',\r\n  filename: 'sys.properties.filename',\r\n  id: 'sys.id',\r\n  includeInSearch: 'sys.metadata.includeInSearch',\r\n  slug: 'sys.slug',\r\n  uri: 'sys.uri',\r\n  versionStatus: 'sys.versionStatus',\r\n};\r\n\r\nexport const Fields = {\r\n  entryTitle: 'entryTitle',\r\n  entryDescription: 'entryDescription',\r\n  keywords: 'keywords',\r\n  sys,\r\n  contentTypeId: 'sys.contentTypeId',\r\n  wildcard: '*',\r\n};\r\n\r\nexport const Projects = {\r\n  website: 'website',\r\n};\r\n\r\nexport const VersionStatus = {\r\n  published: 'published',\r\n  latest: 'latest',\r\n};\r\n\r\nexport const ContentTypes = {\r\n  contentPage: 'contentPage',\r\n};\r\n\r\nexport const WebpageFormats = {};\r\n\r\nexport const FilterExpressionTypes = {\r\n  contentType: 'contentType',\r\n  field: 'field',\r\n};\r\n","import { Op, OrderBy } from 'contensis-delivery-api';\r\nimport { Fields, DataFormats } from '~/core/schema';\r\nimport {\r\n  fixFreeTextForElastic,\r\n  extractQuotedPhrases,\r\n} from '~/core/search/util';\r\n\r\nexport const fieldExpression = (\r\n  field,\r\n  value,\r\n  operator = 'equalTo',\r\n  weight = null\r\n) => {\r\n  if (!field || !value) return [];\r\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\r\n  else\r\n    return !weight\r\n      ? [Op[operator](field, value)]\r\n      : [Op[operator](field, value).weight(weight)];\r\n};\r\n\r\nexport const contentTypeIdExpression = (contentTypeIds, webpageTemplates) => {\r\n  const expressions = [];\r\n  if (!contentTypeIds && !webpageTemplates) return expressions;\r\n\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(contentTypeIds, DataFormats.entry)\r\n    );\r\n  }\r\n\r\n  if (webpageTemplates && webpageTemplates.length > 0) {\r\n    expressions.push(\r\n      ...dataFormatExpression(webpageTemplates, DataFormats.webpage)\r\n    );\r\n  }\r\n\r\n  if (expressions.length > 1) return [Op.or(...expressions)];\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const filterExpressions = filters => {\r\n  if (!filters) return [];\r\n  const expressions = [];\r\n\r\n  filters.map(param => {\r\n    expressions.push(...fieldExpression(param.key, param.value, 'contains'));\r\n  });\r\n\r\n  return expressions;\r\n};\r\n\r\nexport const dataFormatExpression = (\r\n  contentTypeIds,\r\n  dataFormat = DataFormats.entry\r\n) => {\r\n  if (contentTypeIds && contentTypeIds.length > 0) {\r\n    /**\r\n     * We have an array of contentTypeIds some may be prefixed with a \"!\"\r\n     * to indicate this is a \"not\" expression\r\n     */\r\n    const withContentTypeIds = contentTypeIds.filter(c => !c.startsWith('!'));\r\n    const notContentTypeIds = contentTypeIds\r\n      .filter(c => c.startsWith('!'))\r\n      .map(id => id.substring(1));\r\n\r\n    const andExpr = Op.and();\r\n\r\n    const dataFormatExpr = fieldExpression(Fields.sys.dataFormat, dataFormat);\r\n\r\n    const withExpr = fieldExpression(\r\n      Fields.sys.contentTypeId,\r\n      withContentTypeIds\r\n    );\r\n\r\n    const notExpr = [\r\n      Op.not(...fieldExpression(Fields.sys.contentTypeId, notContentTypeIds)),\r\n    ];\r\n\r\n    andExpr.add(...dataFormatExpr);\r\n    if (withContentTypeIds.length > 0) andExpr.add(...withExpr);\r\n    if (notContentTypeIds.length > 0) andExpr.add(...notExpr);\r\n\r\n    return [andExpr];\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const defaultExpressions = versionStatus => {\r\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\r\n};\r\n\r\nexport const defaultSearchExpressions = versionStatus => {\r\n  return [\r\n    ...defaultExpressions(versionStatus),\r\n    ...includeInSearchExpressions(),\r\n  ];\r\n};\r\nexport const includeInSearchExpressions = () => [\r\n  Op.or(\r\n    Op.and(\r\n      Op.exists(Fields.sys.includeInSearch, true),\r\n      Op.equalTo(Fields.sys.includeInSearch, true)\r\n    ),\r\n    Op.exists(Fields.sys.includeInSearch, false)\r\n  ),\r\n];\r\n\r\nexport const orderByExpression = orderBy => {\r\n  let expression = OrderBy;\r\n  if (orderBy && orderBy.length > 0) {\r\n    orderBy.map(\r\n      ob =>\r\n        (expression = ob.startsWith('-')\r\n          ? expression.desc(ob.substring(1))\r\n          : expression.asc(ob))\r\n    );\r\n  }\r\n  return expression;\r\n};\r\n\r\nconst equalToOrIn = (field, arr, operator = 'equalTo') =>\r\n  arr.length === 0\r\n    ? []\r\n    : arr.length === 1\r\n    ? [Op[operator](field, arr[0])]\r\n    : [Op.in(field, ...arr)];\r\n\r\nexport const customWhereExpressions = where => {\r\n  if (!where || !Array.isArray(where)) return [];\r\n\r\n  // Accept HTTP style objects and map them to\r\n  // their equivalent JS client \"Op\" expressions\r\n  return where.map(clause => {\r\n    let expression;\r\n    Object.keys(clause).map((key, idx) => {\r\n      if (idx === 1) {\r\n        const operator = key;\r\n        const value = clause[key];\r\n        expression = Op[operator](clause.field, value, clause.weight);\r\n      }\r\n    });\r\n    return expression;\r\n  });\r\n};\r\n\r\nexport const termExpressions = (searchTerm, weightedSearchFields) => {\r\n  if (searchTerm && weightedSearchFields && weightedSearchFields.length > 0) {\r\n    // Extract any phrases in quotes to array\r\n    const quotedPhrases = extractQuotedPhrases(searchTerm);\r\n\r\n    // Modify the search term to remove any quoted phrases to leave any remaining terms\r\n    let modifiedSearchTerm = searchTerm;\r\n    quotedPhrases.forEach(\r\n      qp =>\r\n        (modifiedSearchTerm = modifiedSearchTerm\r\n          .replace(qp, '')\r\n          .replace('\"\"', '')\r\n          .trim())\r\n    );\r\n\r\n    // Push to the operators array to include in the query\r\n    const operators = [];\r\n\r\n    // Helper functions to generate Op expressions\r\n    const containsOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'contains',\r\n        f.weight\r\n      );\r\n    const freeTextOp = (f, term) =>\r\n      fieldExpression(\r\n        f.fieldId,\r\n        fixFreeTextForElastic(term),\r\n        'freeText',\r\n        f.weight\r\n      );\r\n\r\n    // For each weighted search field\r\n    weightedSearchFields.forEach(f => {\r\n      // Push to field operators\r\n      const fieldOperators = [];\r\n\r\n      // Add operator expressions for modified search term\r\n      if (modifiedSearchTerm) {\r\n        if (\r\n          [Fields.keywords, Fields.sys.filename, Fields.sys.uri].includes(\r\n            f.fieldId\r\n          )\r\n        ) {\r\n          fieldOperators.push(...containsOp(f, modifiedSearchTerm));\r\n        } else {\r\n          if ([Fields.entryTitle].includes(f.fieldId)) {\r\n            fieldOperators.push(\r\n              Op.or(\r\n                ...containsOp(f, modifiedSearchTerm),\r\n                ...freeTextOp(f, modifiedSearchTerm)\r\n              )\r\n            );\r\n          } else {\r\n            fieldOperators.push(...freeTextOp(f, modifiedSearchTerm));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Add operator expressions for any quoted phrases\r\n      quotedPhrases.forEach(qp => fieldOperators.push(...containsOp(f, qp)));\r\n\r\n      // If we are using multiple operators for a field we will\r\n      // wrap each field inside an And operator so we will match\r\n      // all terms/phrases rather than any terms/phrases\r\n      if (fieldOperators.length > 1) {\r\n        operators.push(Op.and(...fieldOperators));\r\n      } else {\r\n        operators.push(...fieldOperators);\r\n      }\r\n    });\r\n\r\n    // Wrap operators in an Or operator\r\n    return [Op.or().addRange(operators)];\r\n  } else if (searchTerm) {\r\n    return [Op.contains(Fields.wildcard, searchTerm)];\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n","// eslint-disable-next-line import/named\r\nimport { Query } from '~/core/util/ContensisDeliveryApi';\r\nimport { fieldExpression, defaultExpressions } from '~/core/search/expressions';\r\n\r\nexport const routeEntryByFieldsQuery = (\r\n  id,\r\n  language = 'en-GB',\r\n  fields = [],\r\n  versionStatus = 'published'\r\n) => {\r\n  const query = new Query(\r\n    ...[\r\n      ...fieldExpression('sys.id', id),\r\n      ...fieldExpression('sys.language', language),\r\n      ...defaultExpressions(versionStatus),\r\n    ]\r\n  );\r\n  query.fields = fields;\r\n  return query;\r\n};\r\n","// load-entries.js\r\nimport * as log from 'loglevel';\r\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\r\nimport {\r\n  SET_ENTRY,\r\n  SET_ANCESTORS,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ROUTE,\r\n  CALL_HISTORY_METHOD,\r\n  SET_SIBLINGS,\r\n  UPDATE_LOADING_STATE,\r\n} from '~/core/redux/types/routing';\r\nimport { cachedSearch, deliveryApi } from '~/core/util/ContensisDeliveryApi';\r\nimport { selectVersionStatus } from '~/core/redux/selectors/version';\r\nimport {\r\n  selectCurrentAncestors,\r\n  selectCurrentNode,\r\n  selectCurrentProject,\r\n  selectMappedEntry,\r\n  selectRouteEntry,\r\n  selectRouteEntryEntryId,\r\n  selectRouteEntryLanguage,\r\n} from '~/core/redux/selectors/routing';\r\nimport { GET_NODE_TREE } from '../types/navigation';\r\nimport { hasNavigationTree } from '../selectors/navigation';\r\nimport { routeEntryByFieldsQuery } from './queries';\r\nimport { ensureNodeTreeSaga } from './navigation';\r\nimport { handleRequiresLoginSaga } from '~/features/login/redux/sagas/login';\r\nimport { findContentTypeMapping } from '~/core/util/helpers';\r\nimport { Map } from 'immutable';\r\n\r\nexport const routingSagas = [\r\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\r\n  takeEvery(SET_ROUTE, setRouteSaga),\r\n];\r\n\r\n/**\r\n * To navigate / push a specific route via redux middleware\r\n * @param {path, state} action\r\n */\r\nfunction* setRouteSaga(action) {\r\n  yield put({\r\n    type: CALL_HISTORY_METHOD,\r\n    payload: {\r\n      method: 'push',\r\n      args: [action.path, action.state],\r\n    },\r\n  });\r\n}\r\n\r\nfunction* getRouteSaga(action) {\r\n  let entry = null;\r\n  try {\r\n    const {\r\n      withEvents,\r\n      routes: { ContentTypeMappings = {} } = {},\r\n      staticRoute,\r\n    } = action;\r\n\r\n    // Variables we will pass to setRouteEntry\r\n    let pathNode = null,\r\n      ancestors = null,\r\n      siblings = null;\r\n\r\n    // These variables are the return values from\r\n    // calls to withEvents.onRouteLoad and onRouteLoaded\r\n    let appsays,\r\n      requireLogin = false;\r\n\r\n    if (withEvents && withEvents.onRouteLoad) {\r\n      appsays = yield withEvents.onRouteLoad(action);\r\n    }\r\n    // if appsays customNavigation: true, we will set doNavigation to false\r\n    // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\r\n    // if appsays nothing we will set doNavigation to true and continue to do navigation calls\r\n    const doNavigation =\r\n      !appsays ||\r\n      (appsays && appsays.customNavigation === true\r\n        ? false\r\n        : (appsays && appsays.customNavigation) || true);\r\n\r\n    const entryLinkDepth = (appsays && appsays.entryLinkDepth) || 3;\r\n    const setContentTypeLimits = !!ContentTypeMappings.find(\r\n      ct => ct.fields || ct.linkDepth || ct.nodeOptions\r\n    );\r\n\r\n    const state = yield select();\r\n    const routeEntry = selectRouteEntry(state);\r\n    const routeNode = selectCurrentNode(state);\r\n    const currentPath = action.path; //selectCurrentPath(state);\r\n    const deliveryApiStatus = selectVersionStatus(state);\r\n    const project = selectCurrentProject(state);\r\n    const isHome = currentPath === '/';\r\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\r\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\r\n\r\n    // debugger;\r\n    // routeEntry = Map({\r\n    //   entryTitle: 'fake entry',\r\n    //   title: 'fakey entry',\r\n    //   sys: { id: 'abcd', contentTypeId: 'zenbaseHomePage' },\r\n    // });\r\n\r\n    if (\r\n      !isPreview &&\r\n      ((appsays && appsays.customRouting) ||\r\n        (staticRoute && !staticRoute.route.fetchNode) ||\r\n        (routeEntry && action.statePath === action.path))\r\n    ) {\r\n      // To prevent erroneous 404s and wasted network calls, this covers\r\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\r\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\r\n      // - standard Contensis SiteView Routing where we already have that entry in state\r\n      if (\r\n        routeEntry &&\r\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\r\n      ) {\r\n        pathNode = routeNode.toJS();\r\n        pathNode.entry = entry = routeEntry.toJS();\r\n        //Do nothing, the entry is allready the right one.\r\n        // yield put({\r\n        //   type: SET_ENTRY,\r\n        //   entry,\r\n        //   node: routeNode,\r\n        //   isLoading: false,\r\n        // });\r\n        yield put({\r\n          type: UPDATE_LOADING_STATE,\r\n          isLoading: false,\r\n        });\r\n      } else\r\n        yield call(\r\n          setRouteEntry,\r\n          routeEntry && routeEntry.toJS(),\r\n          yield select(selectCurrentNode),\r\n          yield select(selectCurrentAncestors)\r\n        );\r\n    } else {\r\n      // Handle homepage\r\n      if (isHome) {\r\n        pathNode = yield cachedSearch.getRootNode(\r\n          {\r\n            depth: 0,\r\n            entryFields: '*',\r\n            entryLinkDepth,\r\n            language: defaultLang,\r\n            versionStatus: deliveryApiStatus,\r\n          },\r\n          project\r\n        );\r\n        ({ entry } = pathNode || {});\r\n      } else {\r\n        // Handle preview routes\r\n        if (isPreview) {\r\n          let splitPath = currentPath.split('/');\r\n          let entryGuid = splitPath[2];\r\n          let language = defaultLang;\r\n          if (splitPath.length >= 3) {\r\n            //set lang key if available in the path, else use default lang\r\n            //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\r\n            if (splitPath.length == 4) language = splitPath[3];\r\n            // According to product dev we cannot use Node API\r\n            // for previewing entries as it gives a response of []\r\n            // -- apparently it is not correct to request latest content\r\n            // with Node API\r\n\r\n            let previewEntry = yield deliveryApi\r\n              .getClient(deliveryApiStatus, project)\r\n              .entries.get({\r\n                id: entryGuid,\r\n                language,\r\n                linkDepth: entryLinkDepth,\r\n              });\r\n            if (previewEntry) {\r\n              pathNode = { entry: previewEntry };\r\n              ({ entry } = pathNode || {});\r\n            }\r\n          }\r\n        } else {\r\n          // Handle all other routes\r\n          const childrenDepth =\r\n            doNavigation === true || doNavigation.children === true\r\n              ? 1\r\n              : (doNavigation && doNavigation.children) || 0;\r\n          pathNode = yield cachedSearch.getNode(\r\n            {\r\n              depth: childrenDepth,\r\n              path: currentPath,\r\n              entryFields: setContentTypeLimits\r\n                ? ['sys.contentTypeId', 'sys.id']\r\n                : '*',\r\n              entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\r\n              versionStatus: deliveryApiStatus,\r\n            },\r\n            project\r\n          );\r\n          ({ entry } = pathNode || {});\r\n\r\n          if (\r\n            setContentTypeLimits &&\r\n            pathNode &&\r\n            pathNode.entry &&\r\n            pathNode.entry.sys &&\r\n            pathNode.entry.sys.id\r\n          ) {\r\n            // Get fields[] and linkDepth from ContentTypeMapping to get the entry data\r\n            // at a specified depth with specified fields\r\n            const { fields, linkDepth, nodeOptions = {} } =\r\n              findContentTypeMapping(\r\n                ContentTypeMappings,\r\n                pathNode.entry.sys.contentTypeId\r\n              ) || {};\r\n            const query = routeEntryByFieldsQuery(\r\n              pathNode.entry.sys.id,\r\n              pathNode.entry.sys.language,\r\n              fields,\r\n              deliveryApiStatus\r\n            );\r\n            const payload = yield cachedSearch.search(\r\n              query,\r\n              linkDepth || entryLinkDepth || 0,\r\n              project\r\n            );\r\n            if (payload && payload.items && payload.items.length > 0) {\r\n              pathNode.entry = entry = payload.items[0];\r\n            }\r\n\r\n            if (childrenDepth > 0 || nodeOptions.children) {\r\n              const childrenOptions = nodeOptions.children || {};\r\n              // We need to make a separate call for child nodes if the first node query has been\r\n              // limited by linkDepth or fields[]\r\n              const childNodes = yield cachedSearch.getChildren({\r\n                id: pathNode.id,\r\n                entryFields: childrenOptions.fields || fields || '*',\r\n                entryLinkDepth:\r\n                  childrenOptions.linkDepth || linkDepth || entryLinkDepth || 0,\r\n                versionStatus: deliveryApiStatus,\r\n              });\r\n              if (childNodes) {\r\n                pathNode.children = childNodes;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if (pathNode && pathNode.id) {\r\n          if (doNavigation === true || doNavigation.ancestors) {\r\n            try {\r\n              ancestors = yield cachedSearch.getAncestors(\r\n                {\r\n                  id: pathNode.id,\r\n                  versionStatus: deliveryApiStatus,\r\n                },\r\n                project\r\n              );\r\n            } catch (ex) {\r\n              log.info('Problem fetching ancestors', ex);\r\n            }\r\n          }\r\n\r\n          if (doNavigation === true || doNavigation.siblings) {\r\n            try {\r\n              siblings = yield cachedSearch.getSiblings(\r\n                {\r\n                  id: pathNode.id,\r\n                  versionStatus: deliveryApiStatus,\r\n                },\r\n                project\r\n              );\r\n            } catch (ex) {\r\n              log.info('Problem fetching siblings', ex);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (withEvents && withEvents.onRouteLoaded) {\r\n      // Check if the app has provided a requireLogin boolean flag or groups array\r\n      // in addition to checking if requireLogin is set in the route definition\r\n      ({ requireLogin } =\r\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\r\n    }\r\n\r\n    if (requireLogin !== false) {\r\n      // Do not call the login feature saga if requireLogin is false\r\n      yield call(handleRequiresLoginSaga, {\r\n        ...action,\r\n        entry,\r\n        requireLogin,\r\n      });\r\n    }\r\n\r\n    if (\r\n      pathNode &&\r\n      pathNode.entry &&\r\n      pathNode.entry.sys &&\r\n      pathNode.entry.sys.id\r\n    ) {\r\n      entry = pathNode.entry;\r\n      const { entryMapper } =\r\n        findContentTypeMapping(ContentTypeMappings, entry.sys.contentTypeId) ||\r\n        {};\r\n      yield call(\r\n        setRouteEntry,\r\n        entry,\r\n        pathNode,\r\n        ancestors,\r\n        siblings,\r\n        entryMapper\r\n      );\r\n    } else {\r\n      if (pathNode)\r\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\r\n      else if (!staticRoute) yield call(do404);\r\n    }\r\n    if (!appsays || !appsays.preventScrollTop) {\r\n      // Scroll into View\r\n      if (typeof window !== 'undefined') {\r\n        window.scroll({\r\n          top: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !hasNavigationTree(state) &&\r\n      (doNavigation === true || doNavigation.tree)\r\n    )\r\n      if (typeof window !== 'undefined') {\r\n        yield put({\r\n          type: GET_NODE_TREE,\r\n          treeDepth:\r\n            doNavigation === true ||\r\n            !doNavigation.tree ||\r\n            doNavigation.tree === true\r\n              ? 2\r\n              : doNavigation.tree,\r\n        });\r\n      } else {\r\n        yield call(ensureNodeTreeSaga);\r\n      }\r\n  } catch (e) {\r\n    log.error(...['Error running route saga:', e, e.stack]);\r\n    yield call(do500, e);\r\n  }\r\n}\r\n\r\nfunction* setRouteEntry(\r\n  entry,\r\n  node,\r\n  ancestors,\r\n  siblings,\r\n  entryMapper,\r\n  notFound = false\r\n) {\r\n  const entrySys = (entry && entry.sys) || {};\r\n\r\n  const currentEntryId = yield select(selectRouteEntryEntryId);\r\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\r\n  const mappedEntry =\r\n    currentEntryId === entrySys.id && currentEntryLang === entrySys.language\r\n      ? ((yield select(selectMappedEntry)) || Map()).toJS()\r\n      : yield mapRouteEntry(entryMapper, {\r\n          ...node,\r\n          entry,\r\n          ancestors,\r\n          siblings,\r\n        });\r\n\r\n  yield all([\r\n    put({\r\n      type: SET_ENTRY,\r\n      id: entrySys.id,\r\n      entry,\r\n      mappedEntry,\r\n      node,\r\n      notFound,\r\n    }),\r\n    ancestors &&\r\n      put({\r\n        type: SET_ANCESTORS,\r\n        ancestors,\r\n      }),\r\n    siblings &&\r\n      put({\r\n        type: SET_SIBLINGS,\r\n        siblings,\r\n      }),\r\n  ]);\r\n}\r\n\r\nfunction* mapRouteEntry(entryMapper, node) {\r\n  try {\r\n    if (typeof entryMapper === 'function') {\r\n      const state = yield select();\r\n      const mappedEntry = yield call(entryMapper, node, state);\r\n      return mappedEntry;\r\n    }\r\n  } catch (e) {\r\n    log.error(...['Error running entryMapper:', e, e.stack]);\r\n  }\r\n  return;\r\n}\r\n\r\nfunction* do404() {\r\n  //yield call(clientReloadHitServer);\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n  });\r\n}\r\n\r\n// function* clientReloadHitServer() {\r\n//   const stateEntry = yield select(selectRouteEntry);\r\n//   // If in client and there is a stateEntry.sys field reload the page,\r\n//   // on the 2nd load stateEntry.sys should be null at this point,\r\n//   // we do not wish to reload again and get stuck in an infinite reloading loop\r\n//   if (\r\n//     typeof window !== 'undefined' &&\r\n//     stateEntry &&\r\n//     stateEntry.get('sys', null)\r\n//   ) {\r\n//     // debugger;\r\n//     window.location.reload();\r\n//   }\r\n// }\r\nfunction* do500(error) {\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n    isError: true,\r\n    error,\r\n    statusCode: error && error.status ? error.status : 500,\r\n  });\r\n}\r\n","import { to } from 'await-to-js';\r\nimport { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { setRoute } from '~/core/redux/actions/routing';\r\nimport { selectCurrentSearch } from '~/core/redux/selectors/routing';\r\nimport { queryParams } from '~/core/util/navigation';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAILED,\r\n} from '../types';\r\n\r\nexport const registerSagas = [\r\n  takeEvery(REGISTER_USER, registerSaga),\r\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\r\n];\r\n\r\nfunction* registerSaga({ user, mappers }) {\r\n  let requestBody = user;\r\n  // Allow use of request mapper to take a user object\r\n  // of any format and return the payload for the api request\r\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\r\n    requestBody = yield mappers.request(user);\r\n  }\r\n\r\n  // Make POST call to register API\r\n  const response = yield fetch('/account/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(requestBody),\r\n  });\r\n\r\n  if (response.ok) {\r\n    let mappedResponse;\r\n    const [, responseBody] = yield to(response.json());\r\n    if (responseBody) {\r\n      // Allow use of response mapper to convert the successful user object\r\n      // from the api response body into a user object of any format\r\n      if (\r\n        mappers &&\r\n        mappers.response &&\r\n        typeof mappers.response === 'function'\r\n      ) {\r\n        mappedResponse = yield mappers.response(responseBody);\r\n      }\r\n      // Update user object with mappedResponse or responseBody\r\n      yield put({\r\n        type: REGISTER_USER_SUCCESS,\r\n        user: mappedResponse || responseBody,\r\n      });\r\n    } else {\r\n      // OK response but unable to parse the response body\r\n      yield put({\r\n        type: REGISTER_USER_FAILED,\r\n        error: {\r\n          message:\r\n            'Unable to parse the created user from the register service response',\r\n        },\r\n      });\r\n    }\r\n  } else {\r\n    // Not OK responses, these can be due to service availability\r\n    // or status codes echoed from the responses received from\r\n    // management api when registering the user\r\n    const [, errorResponse] = yield to(response.json());\r\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\r\n    // Get something meaningful from the response if there is no message in the body\r\n    if (!error.message) {\r\n      error.message = `Registration service: ${response.statusText}`;\r\n      error.status = response.status;\r\n    }\r\n    yield put({\r\n      type: REGISTER_USER_FAILED,\r\n      error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* redirectSaga() {\r\n  // Check if querystring contains a redirect_uri\r\n  const currentQs = queryParams(yield select(selectCurrentSearch));\r\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\r\n\r\n  // We must use redux based navigation to preserve the registration state\r\n  if (redirectUri) yield put(setRoute(redirectUri));\r\n}\r\n","import { loginSagas } from './login';\r\nimport { registerSagas } from './register';\r\n\r\nexport const userSagas = [...loginSagas, ...registerSagas];\r\n","// index.js\r\nimport { all } from 'redux-saga/effects';\r\nimport { navigationSagas } from './navigation';\r\nimport { routingSagas } from './routing';\r\nimport { userSagas } from '~/features/login/redux/sagas/index.js';\r\n\r\nexport default function(featureSagas = []) {\r\n  return function* rootSaga() {\r\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\r\n    yield all([...subSagas, ...featureSagas]);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport RouteLoader from '~/core/routes/RouteLoader';\r\n\r\nconst AppRoot = props => {\r\n  return <RouteLoader {...props} />;\r\n};\r\n\r\nexport default hot(module)(AppRoot);\r\n"],"names":["selectedHistory","window","createBrowserHistory","createMemoryHistory","history","options","browserHistory","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","hostname","query","p","id","project","includes","startsWith","storeSurrogateKeys","response","keys","headers","get","map","reduxStore","dispatch","setSurrogateKeys","getClientConfig","config","DELIVERY_API_CONFIG","responseHandler","projectId","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","location","getVersionStatusFromHostname","indexOf","endsWith","search","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","deliveryApi","CacheNode","constructor","key","value","next","prev","LruCache","limit","head","tail","size","node","remove","setHead","set","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","nodes","getRoot","getNode","path","getAncestors","getChildren","getSiblings","execute","promise","catch","getTaxonomyId","children","n","parts","split","length","getTaxonomyKey","cachedSearch","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","action","state","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","type","SET_NODE_TREE","GET_NODE_TREE_ERROR","ex","error","sys","contentTypeId","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","in","routeEntryByFieldsQuery","language","fields","Query","routingSagas","SET_NAVIGATION_PATH","getRouteSaga","SET_ROUTE","setRouteSaga","CALL_HISTORY_METHOD","payload","method","args","entry","withEvents","routes","ContentTypeMappings","staticRoute","pathNode","ancestors","siblings","appsays","requireLogin","onRouteLoad","doNavigation","customNavigation","entryLinkDepth","setContentTypeLimits","find","ct","nodeOptions","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","currentPath","isHome","isPreview","defaultLang","customRouting","route","fetchNode","statePath","toJS","UPDATE_LOADING_STATE","isLoading","call","setRouteEntry","selectCurrentAncestors","entryFields","splitPath","entryGuid","previewEntry","childrenDepth","findContentTypeMapping","items","childrenOptions","childNodes","log","onRouteLoaded","handleRequiresLoginSaga","entryMapper","do404","preventScrollTop","scroll","top","tree","e","stack","do500","notFound","entrySys","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","mappedEntry","selectMappedEntry","Map","mapRouteEntry","all","SET_ENTRY","SET_ANCESTORS","SET_SIBLINGS","isError","statusCode","status","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","user","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","userSagas","loginSagas","featureSagas","rootSaga","subSagas","AppRoot","props","React","RouteLoader"],"mappings":"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"}